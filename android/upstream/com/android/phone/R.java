/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.phone;

public final class R {
    public static final class array {
        public static final int cdma_network_preferences_choices=0x7f06001a;
        public static final int cdma_network_preferences_values=0x7f06001b;
        public static final int cdma_roaming_mode_choices=0x7f060018;
        public static final int cdma_roaming_mode_values=0x7f060019;
        public static final int cdma_subscription_choices=0x7f06001c;
        public static final int cdma_subscription_values=0x7f06001d;
        public static final int cdma_system_select_choices=0x7f060016;
        public static final int cdma_system_select_values=0x7f060017;
        /**  Phone settings: Caller ID preference values 
         */
        public static final int clir_display_values=0x7f06000c;
        /**  Phone settings: Internal keys used for Caller ID preference values.  DO NOT TRANSLATE. 
         */
        public static final int clir_values=0x7f06000d;
        /**  Options displayed as part of DTMF Tones in Call Settings 
         */
        public static final int dtmf_tone_entries=0x7f060020;
        /**  Do not translate. 
         */
        public static final int dtmf_tone_values=0x7f060021;
        public static final int gsm_umts_network_preferences_choices=0x7f060014;
        public static final int gsm_umts_network_preferences_values=0x7f060015;
        public static final int incoming_call_widget_2way_direction_descriptions=0x7f06000b;
        public static final int incoming_call_widget_2way_target_descriptions=0x7f06000a;
        /**  But in some cases "Respond via SMS" isn't available, so there are
         only 2 choices:
         - Answer (drag right)
         - Reject (drag left) 
         */
        public static final int incoming_call_widget_2way_targets=0x7f060009;
        public static final int incoming_call_widget_3way_direction_descriptions=0x7f060008;
        public static final int incoming_call_widget_3way_target_descriptions=0x7f060007;
        /**  "Target" resources for the MultiWaveView widget used for incoming calls;
         see InCallTouchUi.showIncomingCallWidget() and incall_touch_ui.xml.  
 For most incoming calls the MultiWaveView widget provides 3 choices:
         - Answer (drag right)
         - Reject (drag left)
         - Respond via SMS (drag up) 
         */
        public static final int incoming_call_widget_3way_targets=0x7f060006;
        public static final int list_language_entries=0x7f060012;
        public static final int list_language_values=0x7f060013;
        public static final int phone_type_values=0x7f060004;
        public static final int preferred_network_mode_choices=0x7f06000e;
        /**  Mobile network settings, network mode choices for a device supporting CDMA and LTE [CHAR LIMIT=25] 
         */
        public static final int preferred_network_mode_choices_lte=0x7f060010;
        public static final int preferred_network_mode_values=0x7f06000f;
        public static final int preferred_network_mode_values_lte=0x7f060011;
        public static final int sip_call_options_entries=0x7f060001;
        public static final int sip_call_options_values=0x7f060003;
        public static final int sip_call_options_wifi_only_entries=0x7f060002;
        public static final int sip_send_keepalive_options=0x7f060005;
        public static final int transport_types=0x7f060000;
        /**  Service option entries.  
         */
        public static final int tty_mode_entries=0x7f06001e;
        /**  Do not translate. 
         */
        public static final int tty_mode_values=0x7f06001f;
    }
    public static final class attr {
        /**  The change / update button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int changeNumButtonText=0x7f010002;
        /**  The confirm button mode. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>confirm</code></td><td>0</td><td> Traditional single action "ok" button. </td></tr>
<tr><td><code>activation</code></td><td>1</td><td> Two state "enable/disable" button. </td></tr>
</table>
         */
        public static final int confirmMode=0x7f010003;
        /**  The disable button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableButtonText=0x7f010001;
        /**  The enable button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableButtonText=0x7f010000;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unconditional</code></td><td>0</td><td> unconditional  </td></tr>
<tr><td><code>busy</code></td><td>1</td><td> busy </td></tr>
<tr><td><code>no_reply</code></td><td>2</td><td> no_reply </td></tr>
<tr><td><code>not_reachable</code></td><td>3</td><td> not_reachable </td></tr>
</table>
         */
        public static final int reason=0x7f010005;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>1</td><td> voice </td></tr>
<tr><td><code>data</code></td><td>2</td><td> data </td></tr>
</table>
         */
        public static final int serviceClass=0x7f010004;
    }
    public static final class bool {
        /**  Determines if the current device should allow emergency numbers
         to be logged in the Call Log.
         (Some carriers require that emergency calls *not* be logged,
         presumably to avoid the risk of accidental redialing from the
         call log UI.  This is a good idea, so the default here is false.)

         TODO: on the other hand, it might still be useful to have some
         record of the emergency calls you've made, or to be able to look
         up the exact date/time of an emergency call.  So perhaps we
         *should* log those calls, but instead fix the call log to disable
         the "call" button for emergency numbers. 
         */
        public static final int allow_emergency_numbers_in_call_log=0x7f09000c;
        /**  Determine whether we want to play local DTMF tones in a call, or
         just let the radio/BP handle playing of the tones. 
         */
        public static final int allow_local_dtmf_tones=0x7f090008;
        /**  Flag indicating if auto retry is enabled 
         */
        public static final int auto_retry_enabled=0x7f090007;
        /**  If true, enable vibration (haptic feedback) for key presses
         in the EmergencyDialer activity. The pattern is set on a
         per-platform basis using config_virtualKeyVibePattern.  To be
         consistent with the regular Dialer, this value should agree
         with the corresponding values from config.xml under
         apps/Contacts. 
         */
        public static final int config_enable_dialer_key_vibration=0x7f090003;
        /**  If true, show an onscreen "Dial" button in the dialer.
         In practice this is used on all platforms, even the ones with hard SEND/END
         keys, but for maximum flexibility it's controlled by a flag here
         (which can be overridden on a per-product basis.) 
         */
        public static final int config_show_onscreen_dial_button=0x7f090009;
        /**  If true, removes the Voice Privacy option from Call Settings 
         */
        public static final int config_voice_privacy_disable=0x7f09000e;
        /**  If this is true, the SIM card (through Customer Service Profile EF file) will be
         able to prevent manual operator selection. If false, this SIM setting will be
         ignored and manual operator selection will always be available. See
         CPHS4_2.WW6, CPHS B.4.7.1 for more information 
         */
        public static final int csp_enabled=0x7f09000d;
        /**  Flag indicating if dtmf tone type is enabled 
         */
        public static final int dtmf_type_enabled=0x7f090006;
        /**  Flag indicating if hac is enabled 
         */
        public static final int hac_enabled=0x7f090005;
        /**  Determines if device implements a noise suppression device for in call audio
         */
        public static final int has_in_call_noise_suppression=0x7f09000b;
        /**  Flag indicating whether the Phone app should ignore
         EVENT_SIM_NETWORK_LOCKED events from the Sim.  If true, this will
         prevent the IccNetworkDepersonalizationPanel from being shown,
         and effectively disable the "Sim network lock" feature. 
         */
        public static final int ignore_sim_network_locked_events=0x7f090000;
        /**  Determine whether calls to mute the microphone in PhoneUtils
         are routed through the android.media.AudioManager class (true) or through
         the com.android.internal.telephony.Phone interface (false). 
         */
        public static final int send_mic_mute_to_AudioManager=0x7f09000a;
        /**  Flag indicating whether the Phone app should provide
         a "Dismiss" button on the SIM network unlock screen.
         The default value is true.
         If set to false, there will be *no way* to dismiss the SIM
         network unlock screen if you don't enter the correct unlock code.
         (One important consequence: there will be no way to make an
         Emergency Call if your SIM is network-locked and you don't know
         the PIN.) 
         */
        public static final int sim_network_unlock_allow_dismiss=0x7f090001;
        /**  Flag indicating if the tty is enabled 
         */
        public static final int tty_enabled=0x7f090004;
        /**  Flag indicating if the phone is a world phone 
         */
        public static final int world_phone=0x7f090002;
    }
    public static final class color {
        public static final int dialer_button_text=0x7f080007;
        /**  Dialer 
         */
        public static final int dialer_matchHighlight=0x7f080000;
        /**  white 
 DTMF Dialer 
         */
        public static final int dtmf_dialer_display_text=0x7f080005;
        /**  In-call UI 
         */
        public static final int incall_callTypeSip=0x7f080001;
        /**  green 
         */
        public static final int incall_call_banner_background=0x7f080002;
        /**  semitransparent blueish grey 
         */
        public static final int incall_call_banner_text_color=0x7f080004;
        /**  semitransparent black 
         */
        public static final int incall_call_state_label_background=0x7f080003;
        public static final int ota_title_color=0x7f080008;
        /**  white 
 Color of the theme of the People app 
         */
        public static final int people_app_theme_color=0x7f080006;
    }
    public static final class dimen {
        /**  Padding at the left and right edges of the incall_touch_ui button
         cluster.  This padding is necessary because we can't allow the
         buttons to be very close to the edges of the screen, due to the
         risk of false touches (from your finger wrapping around while
         holding the phone, *before* moving it up to your face and having
         the prox sensor kick in.) 
         */
        public static final int button_cluster_side_padding=0x7f0b000a;
        /**  Dimensions for CallCard elements (the normal in-call UI) 
 Height of the "call banner" overlay on top of the upper part of
         the call info area. 
         */
        public static final int call_banner_height=0x7f0b0000;
        /**  Padding at the left and right edges of the "call banner". 
         */
        public static final int call_banner_side_padding=0x7f0b0003;
        /**  Padding at the top and bottom edges of the "call banner". 
         */
        public static final int call_banner_top_bottom_padding=0x7f0b0004;
        /**  Padding for the "call state label" at the bottom of the banner. 
         */
        public static final int call_state_label_right_padding=0x7f0b0005;
        public static final int call_state_label_top_bottom_padding=0x7f0b0006;
        public static final int contact_photo_inset_height=0x7f0b000c;
        public static final int contact_photo_inset_left_margin=0x7f0b000d;
        /**  Contact photo dimensions 
         */
        public static final int contact_photo_inset_width=0x7f0b000b;
        public static final int dialpad_digits_text_size=0x7f0b0015;
        /**  Dimensions for Emergency Dialer and dialpad inside the in-call screen 
         */
        public static final int dialpad_horizontal_margin=0x7f0b0013;
        public static final int dialpad_vertical_margin=0x7f0b0014;
        /**  Just used in landscape mode 
         */
        public static final int emergency_dialer_digits_height=0x7f0b0016;
        public static final int emergency_dialer_digits_margin_bottom=0x7f0b0018;
        public static final int emergency_dialer_digits_text_size=0x7f0b0019;
        /**  Height of the main row of in-call buttons. 
         */
        public static final int in_call_button_height=0x7f0b0007;
        /**  Width of buttons in the main row of in-call buttons.
         NOTE these buttons are wider on some devices; see values-w360dp/dimens.xml 
 Width of buttons in the main row of in-call buttons. 
         */
        public static final int in_call_button_width=0x7f0b0008;
        /**  Height of the in-call "End" button. 
         */
        public static final int in_call_end_button_height=0x7f0b0009;
        /**  Amount of vertical space to reserve for the MultiWaveView widget
         while an incoming call is ringing.
         This is used as the bottom margin for the "call info container"
         of the in-call UI while an incoming call is ringing, to prevent
         the call info from overlapping with the incoming-call widget.

         The incoming-call widget takes up more vertical space than the
         regular in-call button cluster, so this value is larger than
         in_call_control_height_active. 
         */
        public static final int in_call_incoming_call_widget_height=0x7f0b0002;
        /**  Margin between the bottom of the "call card" photo
         and the top of the in-call button cluster. 
         */
        public static final int in_call_touch_ui_upper_margin=0x7f0b0001;
        public static final int otaactivate_layout_marginTop=0x7f0b0010;
        /**  Dimensions for OTA Call Card 
         */
        public static final int otabase_layout_marginTop=0x7f0b000e;
        public static final int otabase_minHeight=0x7f0b000f;
        public static final int otalistenprogress_layout_marginTop=0x7f0b0011;
        public static final int otasuccessfail_layout_marginTop=0x7f0b0012;
        /**  Top margin for the "Calling via ..." provider badge, which is
         displayed for a few seconds at the start of any outgoing call
         using a gateway provider (see InCallScreen.updateProviderOverlay()).
           Currently, this badge floats on top of the normal in-call UI, and
         the value here is used to position the badge vertically so that
         it doesn't cover up the "call banner" or any onscreen buttons.
           TODO: Integrate the badge more smoothly into the call banner,
         rather than using an overlay element at all (bug 5045539). 
         */
        public static final int provider_overlay_top_margin=0x7f0b0017;
    }
    public static final class drawable {
        public static final int btn_call=0x7f020000;
        public static final int btn_call_pressed=0x7f020001;
        public static final int btn_compound_audio=0x7f020002;
        public static final int btn_compound_background=0x7f020003;
        public static final int btn_compound_dialpad=0x7f020004;
        public static final int btn_compound_hold=0x7f020005;
        public static final int btn_compound_mute=0x7f020006;
        public static final int btn_dial_textfield=0x7f020007;
        public static final int btn_dial_textfield_normal=0x7f020008;
        public static final int btn_dial_textfield_pressed=0x7f020009;
        public static final int btn_dial_textfield_selected=0x7f02000a;
        public static final int dial_background_texture=0x7f02000b;
        public static final int dial_num_0=0x7f02000c;
        public static final int dial_num_0_wht=0x7f02000d;
        public static final int dial_num_1=0x7f02000e;
        public static final int dial_num_1_wht=0x7f02000f;
        public static final int dial_num_2=0x7f020010;
        public static final int dial_num_2_wht=0x7f020011;
        public static final int dial_num_3=0x7f020012;
        public static final int dial_num_3_wht=0x7f020013;
        public static final int dial_num_4=0x7f020014;
        public static final int dial_num_4_wht=0x7f020015;
        public static final int dial_num_5=0x7f020016;
        public static final int dial_num_5_wht=0x7f020017;
        public static final int dial_num_6=0x7f020018;
        public static final int dial_num_6_wht=0x7f020019;
        public static final int dial_num_7=0x7f02001a;
        public static final int dial_num_7_wht=0x7f02001b;
        public static final int dial_num_8=0x7f02001c;
        public static final int dial_num_8_wht=0x7f02001d;
        public static final int dial_num_9=0x7f02001e;
        public static final int dial_num_9_wht=0x7f02001f;
        public static final int dial_num_pound=0x7f020020;
        public static final int dial_num_pound_wht=0x7f020021;
        public static final int dial_num_star=0x7f020022;
        public static final int dial_num_star_wht=0x7f020023;
        public static final int dialog_bg_calling_via=0x7f020024;
        public static final int dialpad_background=0x7f020025;
        public static final int dialpad_background_opaque=0x7f020026;
        public static final int end_call_background=0x7f020027;
        public static final int endcall_background_texture=0x7f020028;
        public static final int grayBg=0x7f02005d;
        public static final int green_divider=0x7f020029;
        public static final int ic_ab_dialer_holo_dark=0x7f02002a;
        public static final int ic_active_state_dialer_holo_dark=0x7f02002b;
        public static final int ic_add_contact_holo_dark=0x7f02002c;
        public static final int ic_bluetooth_holo_dark=0x7f02002d;
        public static final int ic_btn_back=0x7f02002e;
        public static final int ic_btn_next=0x7f02002f;
        public static final int ic_button_conference_end=0x7f020030;
        public static final int ic_button_conference_private=0x7f020031;
        public static final int ic_dial_action_call=0x7f020032;
        public static final int ic_dial_action_delete=0x7f020033;
        public static final int ic_dial_action_search=0x7f020034;
        public static final int ic_dialpad_holo_dark=0x7f020035;
        public static final int ic_end_call=0x7f020036;
        public static final int ic_groups_holo_dark=0x7f020037;
        public static final int ic_hold_pause_holo_dark=0x7f020038;
        public static final int ic_in_call_touch_handle=0x7f020039;
        public static final int ic_in_call_touch_handle_normal=0x7f02003a;
        public static final int ic_incall_switch_holo_dark=0x7f02003b;
        public static final int ic_incoming_call_bluetooth=0x7f02003c;
        public static final int ic_launcher_phone=0x7f02003d;
        public static final int ic_launcher_sip_call=0x7f02003e;
        public static final int ic_menu_contact=0x7f02003f;
        public static final int ic_merge_holo_dark=0x7f020040;
        public static final int ic_more_indicator_holo_dark=0x7f020041;
        public static final int ic_mute_holo_dark=0x7f020042;
        public static final int ic_see_contacts_holo_dark=0x7f020043;
        public static final int ic_sound_bluetooth_holo_dark=0x7f020044;
        public static final int ic_sound_handset_holo_dark=0x7f020045;
        public static final int ic_sound_holo_dark=0x7f020046;
        public static final int ic_sound_off_speakerphone_holo_dark=0x7f020047;
        public static final int ic_sound_speakerphone_holo_dark=0x7f020048;
        public static final int list_focused_holo=0x7f020049;
        public static final int list_pressed_holo_dark=0x7f02004a;
        public static final int list_selector_disabled_holo_dark=0x7f02004b;
        public static final int list_selector_focused_and_checked=0x7f02004c;
        public static final int picture_busy=0x7f02004d;
        public static final int picture_conference=0x7f02004e;
        public static final int picture_dialing=0x7f02004f;
        public static final int picture_emergency25x25=0x7f020050;
        public static final int picture_emergency32x32=0x7f020051;
        public static final int picture_unknown=0x7f020052;
        public static final int separator_green=0x7f02005c;
        public static final int separator_red=0x7f02005b;
        public static final int stat_sys_phone_call=0x7f020053;
        public static final int stat_sys_phone_call_bluetooth=0x7f020054;
        public static final int stat_sys_phone_call_forward=0x7f020055;
        public static final int stat_sys_phone_call_on_hold=0x7f020056;
        public static final int stat_sys_phone_call_ringing=0x7f020057;
        public static final int stat_sys_vp_phone_call=0x7f020058;
        public static final int stat_sys_vp_phone_call_bluetooth=0x7f020059;
        public static final int stat_sys_vp_phone_call_on_hold=0x7f02005a;
    }
    public static final class id {
        public static final int activation=0x7f070001;
        public static final int addButton=0x7f070066;
        public static final int add_remove_account_bar=0x7f070095;
        public static final int add_remove_account_button=0x7f070096;
        public static final int adnRoot=0x7f07000c;
        public static final int audioButton=0x7f070061;
        public static final int audio_mode_bluetooth=0x7f07009f;
        public static final int audio_mode_earpiece=0x7f07009d;
        public static final int audio_mode_speaker=0x7f07009c;
        public static final int audio_mode_wired_headset=0x7f07009e;
        public static final int bad_pin=0x7f070026;
        public static final int bluetoothItem=0x7f070099;
        public static final int bottomButtons=0x7f070057;
        public static final int busy=0x7f070005;
        public static final int button=0x7f07002a;
        public static final int callCard=0x7f07004d;
        public static final int callCardOtaActivate=0x7f070084;
        public static final int callCardOtaFailOrSuccessful=0x7f070089;
        public static final int callCardOtaListenProgress=0x7f070087;
        public static final int callStateLabel=0x7f070019;
        public static final int callTypeLabel=0x7f070016;
        public static final int call_banner_1=0x7f070010;
        public static final int call_banner_2=0x7f07001c;
        public static final int call_info_1=0x7f07000e;
        public static final int call_info_2=0x7f07001a;
        public static final int call_info_container=0x7f07000d;
        public static final int caller0=0x7f07006d;
        public static final int caller1=0x7f07006e;
        public static final int caller2=0x7f07006f;
        public static final int caller3=0x7f070070;
        public static final int caller4=0x7f070071;
        public static final int callingVia=0x7f070053;
        public static final int callingViaIcon=0x7f070052;
        public static final int cdmaMergeButton=0x7f07005c;
        public static final int cdmaMergeButtonImage=0x7f07005d;
        public static final int cdmaMergeButtonLabel=0x7f07005e;
        public static final int compoundBackgroundItem=0x7f070097;
        public static final int conferenceCallerDisconnect=0x7f07001f;
        public static final int conferenceCallerName=0x7f070020;
        public static final int conferenceCallerNumber=0x7f070022;
        public static final int conferenceCallerNumberType=0x7f070021;
        public static final int conferenceCallerSeparate=0x7f070023;
        public static final int conferenceList=0x7f07006c;
        public static final int confirm=0x7f070000;
        public static final int data=0x7f070003;
        public static final int deleteButton=0x7f07003f;
        public static final int dialButton=0x7f07003e;
        public static final int dialpad=0x7f07002f;
        public static final int dialpadAdditionalButtons=0x7f07003c;
        public static final int dialpadButton=0x7f070060;
        public static final int digits=0x7f070046;
        public static final int dtmfDialerField=0x7f070041;
        public static final int dtmf_twelve_key_dialer_stub=0x7f070056;
        public static final int dtmf_twelve_key_dialer_view=0x7f070040;
        public static final int edit_container=0x7f07008d;
        public static final int eight=0x7f070037;
        public static final int elapsedTime=0x7f070015;
        public static final int endButton=0x7f07005f;
        public static final int entry_panel=0x7f07008f;
        public static final int extraButtonRow=0x7f070058;
        /**  View tag ID used by CallCard.Fade 
         */
        public static final int fadeState=0x7f07000b;
        public static final int fdn_name=0x7f070043;
        public static final int fdn_number=0x7f070044;
        public static final int five=0x7f070034;
        public static final int four=0x7f070033;
        public static final int handsetItem=0x7f07009a;
        public static final int holdButton=0x7f070063;
        public static final int holdSwapSpacer=0x7f070065;
        public static final int icon=0x7f070074;
        public static final int inCallControls=0x7f070055;
        public static final int inCallPanel=0x7f07004c;
        public static final int inCallProviderOverlay=0x7f070051;
        public static final int inCallTouchUi=0x7f07004e;
        public static final int incall_screen=0x7f07004b;
        /**  IDs used with events from in-call touch UI elements.
         (Note we handle these in the InCallScreen's "button click"
         handler even though the UI elements may not actually be buttons.) 
         */
        public static final int incomingCallAnswer=0x7f070008;
        public static final int incomingCallReject=0x7f070009;
        public static final int incomingCallRespondViaSms=0x7f07000a;
        public static final int incomingCallWidget=0x7f070054;
        public static final int info=0x7f07007a;
        public static final int infoText=0x7f070049;
        public static final int input_field=0x7f07002e;
        public static final int insetPhoto=0x7f070018;
        public static final int label=0x7f070014;
        public static final int labelAndNumber=0x7f070012;
        public static final int line3=0x7f070078;
        public static final int manageConferenceButton=0x7f070059;
        public static final int manageConferenceButtonImage=0x7f07005a;
        public static final int manageConferenceButtonLabel=0x7f07005b;
        public static final int manageConferenceHeader=0x7f07006b;
        public static final int manageConferencePanel=0x7f070068;
        public static final int manageConferencePanelDivider=0x7f07006a;
        public static final int manageConferencePanelHeader=0x7f070069;
        public static final int manageConferencePanelStub=0x7f070050;
        public static final int manage_done=0x7f070072;
        public static final int mergeButton=0x7f070067;
        public static final int mismatch=0x7f070029;
        public static final int moreIndicatorItem=0x7f070098;
        public static final int muteButton=0x7f070062;
        public static final int name=0x7f070011;
        public static final int ndp_dismiss=0x7f070092;
        public static final int ndp_unlock=0x7f070091;
        public static final int new_pin1=0x7f070027;
        public static final int new_pin2=0x7f070028;
        public static final int nine=0x7f070038;
        public static final int no_reply=0x7f070006;
        public static final int not_reachable=0x7f070007;
        public static final int number_field=0x7f07008c;
        public static final int old_pin=0x7f070025;
        public static final int one=0x7f070030;
        public static final int otaActivate=0x7f07007e;
        public static final int otaActivateButton=0x7f070085;
        public static final int otaCallCardStub=0x7f07004f;
        public static final int otaDtmfDialerView=0x7f070081;
        public static final int otaEndButton=0x7f070088;
        public static final int otaListenProgress=0x7f07007f;
        public static final int otaNextButton=0x7f07008a;
        public static final int otaSeparator=0x7f070082;
        public static final int otaSkipButton=0x7f070086;
        public static final int otaSpeakerButton=0x7f070083;
        public static final int otaSuccessFailStatus=0x7f070080;
        public static final int otaTitle=0x7f07007d;
        public static final int otaTopLevel=0x7f07007b;
        public static final int otaTryAgainButton=0x7f07008b;
        public static final int otaUpperWidgets=0x7f07007c;
        public static final int phoneNumber=0x7f070013;
        public static final int photo=0x7f07000f;
        public static final int pin=0x7f070047;
        public static final int pin_entry=0x7f070090;
        public static final int pinc=0x7f070042;
        public static final int placeCall=0x7f07004a;
        public static final int pound=0x7f07003b;
        public static final int progress_large=0x01010000;
        public static final int puk_code=0x7f07002c;
        public static final int puk_panel=0x7f07002b;
        public static final int puk_submit=0x7f07002d;
        public static final int scroll=0x7f070024;
        public static final int searchButton=0x7f07003d;
        public static final int secondaryCallName=0x7f07001d;
        public static final int secondaryCallPhoto=0x7f07001b;
        public static final int secondaryCallStatus=0x7f07001e;
        public static final int select_contact=0x7f07008e;
        public static final int seven=0x7f070036;
        public static final int six=0x7f070035;
        public static final int socialStatus=0x7f070017;
        public static final int speakerphoneItem=0x7f07009b;
        public static final int star=0x7f070039;
        public static final int status=0x7f070048;
        public static final int status_bar_latest_event_content=0x7f070073;
        public static final int status_bar_latest_event_content_large_icon=0x7f070075;
        public static final int status_panel=0x7f070093;
        public static final int status_text=0x7f070094;
        public static final int swapButton=0x7f070064;
        public static final int text1=0x7f070079;
        public static final int text2=0x7f070077;
        public static final int three=0x7f070032;
        public static final int title=0x7f070076;
        public static final int top=0x7f070045;
        public static final int two=0x7f070031;
        public static final int unconditional=0x7f070004;
        public static final int voice=0x7f070002;
        public static final int zero=0x7f07003a;
    }
    public static final class integer {
        /**  Determine whether or not we should play the success/failure tone 
         */
        public static final int OtaPlaySuccessFailureTone=0x7f0a0003;
        /**  The number of times we should show the activation screen/allow the provisioning
         to fail before just showing an unsuccessful dialog 
         */
        public static final int OtaShowActivateFailTimes=0x7f0a0002;
        /**  OTA configuration values, used when provisioning CDMA devices.
         Following defaults values of zero means OTA UI is completely disabled.
         These OTA UI can be enabled by setting config value to one in the product
         specific overlay file 
 Determine whether we want to display the OTA activation screen, which
         gives the user option to activate or cancel 
         */
        public static final int OtaShowActivationScreen=0x7f0a0000;
        /**  Determine whether we should show the "listen for instructions" screen after
         successfully placing the OTA call 
         */
        public static final int OtaShowListeningScreen=0x7f0a0001;
    }
    public static final class layout {
        public static final int adn_list=0x7f040000;
        public static final int call_card=0x7f040001;
        public static final int caller_in_conference=0x7f040002;
        public static final int change_sim_pin_screen=0x7f040003;
        public static final int delete_fdn_contact_screen=0x7f040004;
        public static final int dialog_ussd_response=0x7f040005;
        public static final int dialpad=0x7f040006;
        public static final int dialpad_additional_buttons=0x7f040007;
        public static final int dtmf_twelve_key_dialer_view=0x7f040008;
        public static final int edit_fdn_contact_screen=0x7f040009;
        public static final int emergency_dialer=0x7f04000a;
        public static final int enable_fdn_screen=0x7f04000b;
        public static final int enable_sim_pin_screen=0x7f04000c;
        public static final int fake_phone_activity=0x7f04000d;
        public static final int get_pin2_screen=0x7f04000e;
        public static final int incall_screen=0x7f04000f;
        public static final int incall_touch_ui=0x7f040010;
        public static final int manage_conference_panel=0x7f040011;
        public static final int ongoing_call_notification=0x7f040012;
        public static final int otacall_card=0x7f040013;
        public static final int pref_dialog_editphonenumber=0x7f040014;
        public static final int pref_dialog_editpin=0x7f040015;
        public static final int sim_import_list_entry=0x7f040016;
        public static final int sim_ndp=0x7f040017;
        public static final int sip_settings_ui=0x7f040018;
    }
    public static final class menu {
        public static final int incall_audio_mode_menu=0x7f0f0000;
    }
    public static final class mipmap {
        public static final int ic_launcher_contacts=0x7f030000;
    }
    public static final class plurals {
        /**  ECM: Dialog box message for exiting from the notifications screen 
         */
        public static final int alert_dialog_exit_ecm=0x7f0d0001;
        /**  ECM: Dialog box message for exiting from any other app 
         */
        public static final int alert_dialog_not_avaialble_in_ecm=0x7f0d0002;
        public static final int phone_in_ecm_notification_time=0x7f0d0000;
    }
    public static final class string {
        /**  For incoming calls, this is a string we can get from a CDMA network instead of
         the actual phone number, to indicate there's no number present.  DO NOT TRANSLATE. 
         */
        public static final int absent_num=0x7f0c01d0;
        /**  Content description of the call muted notification icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_call_muted=0x7f0c0262;
        /**  Content description of the speakerphone enabled notification icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_speakerphone_enabled=0x7f0c0261;
        /**  Title of "Edit FDN Contact" screen for a new contact 
         */
        public static final int add_fdn_contact=0x7f0c0133;
        /**  Title for the button to add a new sip account. [CHAR LIMIT=NONE] 
 outdated translation 5814944381529304294 
         */
        public static final int add_sip_account=0x7f0c01fb;
        /**  Button label on the "Missing voicemail number" dialog 
         */
        public static final int add_vm_number_str=0x7f0c003b;
        /**  "Edit FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int adding_fdn_contact=0x7f0c0134;
        /**  CDMA Call settings screen, setting option name 
         */
        public static final int additional_cdma_call_settings=0x7f0c0058;
        /**  GSM Call settings screen, setting option name 
         */
        public static final int additional_gsm_call_settings=0x7f0c0056;
        public static final int administrative_disable=0x7f0c00c9;
        public static final int administrative_enable=0x7f0c00c8;
        /**  Text of the advanced settings section. [CHAR LIMIT=NONE] 
         */
        public static final int advanced_settings=0x7f0c0225;
        public static final int advanced_settings_container=0x7f0c0245;
        /**  Hint to hide the advanced settings section. [CHAR LIMIT=NONE] 
         */
        public static final int advanced_settings_hide=0x7f0c022e;
        /**  Hint to show the advanced settings section. [CHAR LIMIT=NONE] 
         */
        public static final int advanced_settings_show=0x7f0c022d;
        /**  Title of the advanced settings button. The button will show the advanced settings of a SIP account in the SIP editor [CHAR LIMIT=NONE] 
         */
        public static final int advanced_settings_title=0x7f0c0208;
        public static final int advertisements_disable=0x7f0c00f4;
        public static final int advertisements_enable=0x7f0c00f3;
        /**  Title of the alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int alert_dialog_close=0x7f0c0202;
        /**  ECM: ECM exit dialog choice 
         */
        public static final int alert_dialog_dismiss=0x7f0c01cf;
        /**  ECM: Dialog box message while in emergency call 
         */
        public static final int alert_dialog_in_ecm_call=0x7f0c01cb;
        /**  ECM: ECM exit dialog choice 
         */
        public static final int alert_dialog_no=0x7f0c01ce;
        /**  Title of the button to show in a alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int alert_dialog_ok=0x7f0c0203;
        /**  ECM: ECM exit dialog choice 
         */
        public static final int alert_dialog_yes=0x7f0c01cd;
        /**  Mobile network settings screen, setting option name 
         */
        public static final int apn_settings=0x7f0c0050;
        public static final int atr_disable=0x7f0c00e5;
        public static final int atr_enable=0x7f0c00e4;
        /**  "Audio mode" popup menu: Item label to select the bluetooth headset [CHAR LIMIT=25] 
         */
        public static final int audio_mode_bluetooth=0x7f0c0032;
        /**  "Audio mode" popup menu: Item label to select the handset earpiece [CHAR LIMIT=25] 
         */
        public static final int audio_mode_earpiece=0x7f0c0030;
        /**  "Audio mode" popup menu: Item label to select the speakerphone [CHAR LIMIT=25] 
         */
        public static final int audio_mode_speaker=0x7f0c002f;
        /**  "Audio mode" popup menu: Item label to select the wired headset [CHAR LIMIT=25] 
         */
        public static final int audio_mode_wired_headset=0x7f0c0031;
        public static final int auth_username=0x7f0c0246;
        /**  Help text of the auth_username field. [CHAR LIMIT=NONE] 
         */
        public static final int auth_username_summary=0x7f0c0227;
        /**  Text of the username used in authentication. [CHAR LIMIT=NONE] 
         */
        public static final int auth_username_title=0x7f0c0226;
        /**  Title for enabling the auto registration for all sip accounts.  [CHAR LIMIT=NONE] 
 outdated translation 9010426641641090284 
         */
        public static final int auto_reg=0x7f0c01f0;
        public static final int auto_registration=0x7f0c0243;
        /**  Text of the auto registration preference summary. [CHAR LIMIT=NONE] 
         */
        public static final int auto_registration_summary=0x7f0c0222;
        /**  Text of the auto registration preference. [CHAR LIMIT=NONE] 
 outdated translation 5156483863963866266 
         */
        public static final int auto_registration_title=0x7f0c0221;
        public static final int auto_retry_mode_summary=0x7f0c012b;
        public static final int auto_retry_mode_title=0x7f0c012a;
        /**  SIM PIN screen: error message 
         */
        public static final int badPin=0x7f0c0148;
        /**  SIM PIN2 screen: error message 
         */
        public static final int badPin2=0x7f0c0158;
        /**  Error message displayed on SIM PIN unlock panel 
         */
        public static final int badPuk=0x7f0c0043;
        /**  SIM PIN2 screen: error message 
         */
        public static final int badPuk2=0x7f0c0157;
        public static final int bf_news_settings=0x7f0c00ce;
        /**  Button label on SIM PIN unlock panel 
         */
        public static final int buttonTxtContinue=0x7f0c0044;
        /**  In-call screen: call failure reason (call denied because call barring is on) 
         */
        public static final int callFailed_cb_enabled=0x7f0c0017;
        /**  In-call screen: call failure reason (CDMA: Service Option Reject)
         */
        public static final int callFailed_cdma_SO_reject=0x7f0c001f;
        /**  In-call screen: call failure reason (CDMA: Access failure)
 outdated translation 2844306027616452215 
         */
        public static final int callFailed_cdma_accessFailure=0x7f0c0021;
        /**  In-call screen: call failure reason (CDMA: call dropped)
         */
        public static final int callFailed_cdma_drop=0x7f0c001c;
        /**  In-call screen: call failure reason (CDMA: call intercepted)
         */
        public static final int callFailed_cdma_intercept=0x7f0c001d;
        /**  In-call screen: call failure reason (Phone is locked until next power cycle)
         */
        public static final int callFailed_cdma_lockedUntilPowerCycle=0x7f0c001b;
        /**  In-call screen: call failure reason (Only Emergency calls are possible)
         */
        public static final int callFailed_cdma_notEmergency=0x7f0c0023;
        /**  In-call screen: call failure reason (CDMA: Preempted)
         */
        public static final int callFailed_cdma_preempted=0x7f0c0022;
        /**  In-call screen: call failure reason (CDMA reorder)
         */
        public static final int callFailed_cdma_reorder=0x7f0c001e;
        /**  In-call screen: call failure reason (CDMA: retry order)
         */
        public static final int callFailed_cdma_retryOrder=0x7f0c0020;
        /**  In-call screen: call failure reason (network congestion) 
         */
        public static final int callFailed_congestion=0x7f0c000a;
        /**  In-call screen: call failure reason (call denied because domain specific access control is on) 
         */
        public static final int callFailed_dsac_restricted=0x7f0c0018;
        /**  In-call screen: call failure reason (Emergency call denied because domain specific access control is on)
         */
        public static final int callFailed_dsac_restricted_emergency=0x7f0c0019;
        /**  In-call screen: call failure reason (Normal call denied because domain specific access control is on)
         */
        public static final int callFailed_dsac_restricted_normal=0x7f0c001a;
        /**  In-call screen: call failure reason (call denied because of current FDN setting) 
         */
        public static final int callFailed_fdn_only=0x7f0c0016;
        /**  In-call screen: call failure reason (incorrect username or password) 
         */
        public static final int callFailed_invalid_credentials=0x7f0c000e;
        /**  In-call screen: call failure reason (GSM ACM limit exceeded) 
         */
        public static final int callFailed_limitExceeded=0x7f0c0012;
        /**  In-call screen: call failure reason (no signal) 
         */
        public static final int callFailed_noSignal=0x7f0c0011;
        /**  In-call screen: call failure reason (peer unreachable) 
         */
        public static final int callFailed_number_unreachable=0x7f0c000d;
        /**  In-call screen: call failure reason (out of service) 
         */
        public static final int callFailed_outOfService=0x7f0c0015;
        /**  In-call screen: call failure reason (calling from out of network is not allowed) 
         */
        public static final int callFailed_out_of_network=0x7f0c000f;
        /**  In-call screen: call failure reason (radio is off) 
         */
        public static final int callFailed_powerOff=0x7f0c0013;
        /**  In-call screen: call failure reason (server error) 
         */
        public static final int callFailed_server_error=0x7f0c0010;
        /**  In-call screen: call failure reason (server unreachable) 
         */
        public static final int callFailed_server_unreachable=0x7f0c000c;
        /**  In-call screen: call failure reason (SIM error) 
         */
        public static final int callFailed_simError=0x7f0c0014;
        /**  In-call screen: call failure reason (client timed out) 
         */
        public static final int callFailed_timedOut=0x7f0c000b;
        /**  In-call screen: call failure reason (Dialed number doesn't exist) 
         */
        public static final int callFailed_unobtainable_number=0x7f0c0024;
        /**  Possible error messages with outgoing calls 
 In-call screen: call failure reason (busy) 
         */
        public static final int callFailed_userBusy=0x7f0c0009;
        /**  Call forwarding settings screen, section heading 
         */
        public static final int call_forwarding_settings=0x7f0c0062;
        /**  In-call screen: call lost dialog text 
         */
        public static final int call_lost=0x7f0c0026;
        /**  In-call screen: call lost title of dialog 
         */
        public static final int call_lost_title=0x7f0c0028;
        /**  Title for enabling the routing all outgoing calls via SIP. [CHAR LIMIT=NONE] 
 outdated translation 9150161835243082714 
         */
        public static final int call_priority=0x7f0c01f1;
        /**  Call settings screen title 
         */
        public static final int call_settings=0x7f0c0055;
        /**  In-call screen: status label for a conference call 
         */
        public static final int caller_manage_header=0x7f0c0161;
        /**  In-call screen: Button label on "Manage conference" panel 
         */
        public static final int caller_manage_manage_done_text=0x7f0c0162;
        /**  Title displayed in the overlay when a call is placed using a 3rd party provider.
         ^1 is the localized name of the provider obtained from the package manager.
         ^2 is a phone number.
         E.g: "Calling via Google Voice\n 1-800-666-1234"
    
         */
        public static final int calling_via_template=0x7f0c01d7;
        /**  Label for "cancel" button on the MMI dialog 
         */
        public static final int cancel=0x7f0c002d;
        /**  In-call screen: status label displayed briefly after a call ends 
         */
        public static final int card_title_call_ended=0x7f0c0171;
        /**  In-call screen: status label for an cdma call waiting 
         */
        public static final int card_title_cdma_call_waiting=0x7f0c0170;
        /**  In-call screen: status label for a conference call 
         */
        public static final int card_title_conf_call=0x7f0c016e;
        /**  Card titles 
 In-call screen: status label for a call in the "dialing" state 
         */
        public static final int card_title_dialing=0x7f0c016c;
        /**  In-call screen: status label for a call that's in the process of hanging up 
         */
        public static final int card_title_hanging_up=0x7f0c0173;
        /**  In-call screen: status label for a call that's in CDMA flash mode 
         */
        public static final int card_title_in_call=0x7f0c0174;
        /**  In-call screen: status label for an incoming call 
         */
        public static final int card_title_incoming_call=0x7f0c016f;
        /**  In-call screen: special status label that shows your own phone
         number during emergency callback mode (ECM) [CHAR LIMIT=30] 
         */
        public static final int card_title_my_phone_number=0x7f0c0175;
        /**  In-call screen: status label for call that's on hold 
         */
        public static final int card_title_on_hold=0x7f0c0172;
        /**  In-call screen: status label for a re-dialing call 
         */
        public static final int card_title_redialing=0x7f0c016d;
        public static final int cb_sms_settings=0x7f0c00c3;
        /**  Preference title with which users can activate CDMA network [CHAR LIMIT=30] 
         */
        public static final int cdma_activate_device=0x7f0c0115;
        /**  Cell broadcast SMS strings 
         */
        public static final int cdma_cell_broadcast_sms=0x7f0c00be;
        /**  Preference title for launching an account manager page for prepaid LTE [CHAR LIMIT=30] 
         */
        public static final int cdma_lte_data_service=0x7f0c0116;
        public static final int cdma_network_preferences_dialogtitle=0x7f0c0111;
        public static final int cdma_network_preferences_title=0x7f0c010f;
        public static final int cdma_network_preferneces_summary=0x7f0c0110;
        public static final int cdma_options=0x7f0c00b1;
        public static final int cdma_roaming_mode_dialogtitle=0x7f0c010e;
        public static final int cdma_roaming_mode_summary=0x7f0c010d;
        /**  CDMA Options strings 
         */
        public static final int cdma_roaming_mode_title=0x7f0c010c;
        public static final int cdma_subscription_dialogtitle=0x7f0c0114;
        public static final int cdma_subscription_summary=0x7f0c0113;
        public static final int cdma_subscription_title=0x7f0c0112;
        /**  System select settings screen title 
         */
        public static final int cdma_system_select_dialogtitle=0x7f0c010b;
        /**  Mobile network settings screen, setting summary text 
         */
        public static final int cdma_system_select_summary=0x7f0c010a;
        /**  CDMA System select strings 
 Mobile network settings screen, setting option name 
         */
        public static final int cdma_system_select_title=0x7f0c0109;
        public static final int cell_bc_sms_disable=0x7f0c00c2;
        public static final int cell_bc_sms_enable=0x7f0c00c1;
        public static final int cell_broadcast_sms=0x7f0c00bf;
        /**  Button label which indicates the user wants to update a stored
         phone number; used in several settings-related dialogs 
         */
        public static final int change_num=0x7f0c0085;
        /**  Title of "Change SIM PIN" screen 
         */
        public static final int change_pin=0x7f0c0143;
        /**  Call settings screen, setting option name 
         */
        public static final int change_pin2=0x7f0c011e;
        /**  Button label used to dismiss the "Call settings error" dialog 
         */
        public static final int close_dialog=0x7f0c0082;
        /**  Title of the button to show in a alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int close_profile=0x7f0c0204;
        /**  In-call screen: status label for a conference call 
         */
        public static final int confCall=0x7f0c0025;
        /**  SIM PIN2 screen: label for PIN entry widget 
         */
        public static final int confirmPin2Label=0x7f0c0156;
        /**  SIM PIN screen: label for PIN entry widget 
         */
        public static final int confirmPinLabel=0x7f0c0147;
        /**  Available networks screen, toast when unable to connect to a network temporarily 
         */
        public static final int connect_later=0x7f0c0096;
        /**  Use this as a default to describe the contact photo; currently for screen readers through accessibility. 
         */
        public static final int contactPhoto=0x7f0c01e0;
        /**  Mobile network settings screen, setting summary text when check box is not selected (explains what selecting it would do) 
         */
        public static final int data_enable_summary=0x7f0c00aa;
        /**  Mobile network settings screen, data enabling checkbox name 
 no translation found for preferred_network_mode_choices_lte:0 (7345284701413565429) 
 no translation found for preferred_network_mode_choices_lte:1 (5541716989029928208) 
         */
        public static final int data_enabled=0x7f0c00a9;
        /**  Default sip server/proxy port number. 
         */
        public static final int default_port=0x7f0c022b;
        /**  Initial status of the preferences is '<Not set>'. [CHAR LIMIT=NONE] 
         */
        public static final int default_preference_summary=0x7f0c0228;
        /**  Default sip server/proxy transport protocol. 
         */
        public static final int default_transport=0x7f0c022c;
        /**  Title of "Delete FDN Contact" screen 
         */
        public static final int delete_fdn_contact=0x7f0c0139;
        /**  "Delete FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int deleting_fdn_contact=0x7f0c013a;
        /**  String describing the Delete/Backspace ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_delete_button=0x7f0c0260;
        /**  String describing the Dial ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_dial_button=0x7f0c025f;
        /**  String describing the image on ImageButton eight

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_eight=0x7f0c0259;
        /**  String describing the image on ImageButton five

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_five=0x7f0c0256;
        /**  String describing the image on ImageButton four

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_four=0x7f0c0255;
        /**  String describing the image on ImageButton nine

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_nine=0x7f0c025a;
        /**  String describing the image on ImageButton one

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_one=0x7f0c0252;
        /**  String describing the image on ImageButton pound

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_pound=0x7f0c025d;
        /**  String describing the image on ImageButton seven

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_seven=0x7f0c0258;
        /**  String describing the image on ImageButton six

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_six=0x7f0c0257;
        /**  String describing the image on ImageButton star

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_star=0x7f0c025b;
        /**  String describing the image on ImageButton three

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_three=0x7f0c0254;
        /**  String describing the image on ImageButton two

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_two=0x7f0c0253;
        /**  String describing the image on ImageButton zero

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_zero=0x7f0c025c;
        /**  String describing the Search ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_search_button=0x7f0c025e;
        /**  Description of the answer target in the Slide unlock screen of Phone. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_answer=0x7f0c0263;
        /**  Description of the decline on target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_decline=0x7f0c0265;
        /**  Description of the send_sms target in the Slide unlock screen of Phone. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_send_sms=0x7f0c0264;
        /**  Label for onscreen "Dial" button used in the EmergencyDialer 
         */
        public static final int dial_button_label=0x7f0c01d6;
        /**  Emergency dialer: message displayed in an error dialog 
         */
        public static final int dial_emergency_empty_error=0x7f0c0196;
        /**  Dialer text on Emergency Dialer 
 Emergency dialer: message displayed in an error dialog 
         */
        public static final int dial_emergency_error=0x7f0c0195;
        /**  Displayed in the text entry box in the dialer when in landscape mode to guide the user
         to dial using the physical keyboard 
         */
        public static final int dialerKeyboardHintText=0x7f0c0197;
        /**  Placeholder text displayed while loading a list of phone numbers
         into the dialer UI 
         */
        public static final int dialer_emptyListWorking=0x7f0c003c;
        /**  Button label used in several settings-related dialogs 
         */
        public static final int disable=0x7f0c0084;
        /**  Error message displayed after failing to disable forwarding calls when the phone is busy 
         */
        public static final int disable_cfb_forbidden=0x7f0c006e;
        /**  Error message displayed after failing to disable forwarding calls when the phone is unreachable 
         */
        public static final int disable_cfnrc_forbidden=0x7f0c0078;
        /**  Error message displayed after failing to disable forwarding calls when the phone does not answer 
         */
        public static final int disable_cfnry_forbidden=0x7f0c0073;
        /**  Call settings screen, setting option name 
         */
        public static final int disable_fdn=0x7f0c011d;
        /**  Call settings screen, setting option name when FDN is disabled 
         */
        public static final int disable_fdn_ok=0x7f0c0120;
        /**  SIM PIN screen: status message displayed in a popup (toast) 
         */
        public static final int disable_pin_ok=0x7f0c014f;
        /**  Title of "Disable SIM PIN" screen 
         */
        public static final int disable_sim_pin=0x7f0c014b;
        public static final int display_name=0x7f0c023e;
        /**  Default value for the display-name preference summary. [CHAR LIMIT=NONE] 
         */
        public static final int display_name_summary=0x7f0c0229;
        /**  Text of the display name preference. [CHAR LIMIT=NONE] 
         */
        public static final int display_name_title=0x7f0c021b;
        /**  Do not translate the following strings. Used for the preference keys 
         */
        public static final int domain_address=0x7f0c023b;
        /**  Text of the domain address preference. [CHAR LIMIT=NONE] 
 outdated translation 6628028903715208419 
         */
        public static final int domain_address_title=0x7f0c0218;
        /**  SIM PIN screen: button label 
         */
        public static final int doneButton=0x7f0c0160;
        /**  Hint text displayed in the "digits" field at the top of the
         in-call DTMF dialpad.  (This hint reminds the user that the
         dialpad is there to generate tones, not to add a new call.) 
         */
        public static final int dtmfDialpadHintText=0x7f0c0198;
        /**  Summary for the DTMF Tones options displayed in Call Settings 
         */
        public static final int dtmf_tones_summary=0x7f0c01af;
        /**  Dtmf tones settings 
 Title for the DTMF Tones options displayed in Call Settings 
         */
        public static final int dtmf_tones_title=0x7f0c01ae;
        /**  Emergency Callback Mode (ECM) 
         */
        public static final int ecm_exit_dialog=0x7f0c01c7;
        /**  Title of "Edit FDN Contact" screen when editing an already-existing contact 
         */
        public static final int edit_fdn_contact=0x7f0c0136;
        /**  Screen title for Emergency Dialer UI 
         */
        public static final int emergencyDialerIconLabel=0x7f0c0001;
        public static final int emergency_broadcast_disable=0x7f0c00c6;
        public static final int emergency_broadcast_enable=0x7f0c00c5;
        /**  Status message for the "radio enable" UI for emergency calls 
         */
        public static final int emergency_enable_radio_dialog_message=0x7f0c0193;
        /**  Status message for the "radio enable" UI for emergency calls 
         */
        public static final int emergency_enable_radio_dialog_retry=0x7f0c0194;
        /**  Dialog title for the "radio enable" UI for emergency calls 
         */
        public static final int emergency_enable_radio_dialog_title=0x7f0c0192;
        /**  Text in an alert dialog telling the user that some input field (name of which is also part of the strings being translated above) is required and can not be left blank. [CHAR LIMIT=NONE] 
         */
        public static final int empty_alert=0x7f0c022f;
        /**  Available networks screen, text when no networks are found 
         */
        public static final int empty_networks_list=0x7f0c0091;
        /**  Button label used in several settings-related dialogs 
         */
        public static final int enable=0x7f0c0083;
        public static final int enable_disable_administrative=0x7f0c00c7;
        public static final int enable_disable_advertisements=0x7f0c00f2;
        public static final int enable_disable_atr=0x7f0c00e3;
        public static final int enable_disable_cell_bc_sms=0x7f0c00c0;
        public static final int enable_disable_emergency_broadcast=0x7f0c00c4;
        public static final int enable_disable_eo=0x7f0c00f8;
        public static final int enable_disable_international=0x7f0c00da;
        public static final int enable_disable_lafs=0x7f0c00e6;
        public static final int enable_disable_local=0x7f0c00d1;
        public static final int enable_disable_local_weather=0x7f0c00e0;
        public static final int enable_disable_lodgings=0x7f0c00ec;
        public static final int enable_disable_maintenance=0x7f0c00ca;
        public static final int enable_disable_mhh=0x7f0c00fb;
        public static final int enable_disable_multi_category=0x7f0c0101;
        public static final int enable_disable_national=0x7f0c00d7;
        public static final int enable_disable_regional=0x7f0c00d4;
        public static final int enable_disable_restaurants=0x7f0c00e9;
        public static final int enable_disable_retail_directory=0x7f0c00ef;
        public static final int enable_disable_stock_quotes=0x7f0c00f5;
        public static final int enable_disable_technology_news=0x7f0c00fe;
        /**  Call settings screen, setting option name 
         */
        public static final int enable_fdn=0x7f0c011c;
        /**  Call settings screen, setting option name when FDN is enabled 
         */
        public static final int enable_fdn_ok=0x7f0c011f;
        /**  SIM PIN screen: progress message displayed while enabling 
         */
        public static final int enable_in_progress=0x7f0c014d;
        /**  SIM PIN strings 
 Title of "Enable/disable SIM PIN" screen 
         */
        public static final int enable_pin=0x7f0c0142;
        /**  SIM PIN screen: status message displayed in a popup (toast) 
         */
        public static final int enable_pin_ok=0x7f0c014e;
        /**  Title of "Enable SIM PIN" screen 
         */
        public static final int enable_sim_pin=0x7f0c014c;
        /**  Label for PIN entry widget on SIM PIN unlock panel 
         */
        public static final int enterNewPin=0x7f0c003f;
        /**  SIM PIN strings 
 Instructional text on SIM PIN unlock panel 
         */
        public static final int enterPin=0x7f0c003d;
        /**  Instructional text on SIM PIN unlock panel 
         */
        public static final int enterPuk=0x7f0c0042;
        /**  SIM PIN2 strings 
 SIM PIN2 screen: label for PIN entry widget 
         */
        public static final int enter_pin2_text=0x7f0c0153;
        /**  SIM PIN screen: label for PIN entry widget 
         */
        public static final int enter_pin_text=0x7f0c0144;
        public static final int entertainment_news_settings=0x7f0c00d0;
        public static final int eo_disable=0x7f0c00fa;
        public static final int eo_enable=0x7f0c00f9;
        /**  Label for ERI text widget, shown in list of all gadgets 
         */
        public static final int eri_text_label=0x7f0c01ad;
        /**  Title of the alert dialog displayed if an error occurs while updating Call settings 
         */
        public static final int error_updating_title=0x7f0c007a;
        /**  Status message displayed in the "Call settings error" dialog 
         */
        public static final int exception_error=0x7f0c007f;
        /**  Used in FakePhoneActivity test code.  DO NOT TRANSLATE. 
         */
        public static final int fake_phone_activity_infoText_text=0x7f0c0164;
        /**  Used in FakePhoneActivity test code.  DO NOT TRANSLATE. 
         */
        public static final int fake_phone_activity_phoneNumber_text=0x7f0c0163;
        /**  Used in FakePhoneActivity test code.  DO NOT TRANSLATE. 
         */
        public static final int fake_phone_activity_placeCall_text=0x7f0c0165;
        /**  FDN settings strings 
 Call settings screen, setting option name 
         */
        public static final int fdn=0x7f0c0117;
        /**  Title of FDN list screen 
         */
        public static final int fdnListLabel=0x7f0c0003;
        /**  Call settings screen, preference item label 
         */
        public static final int fdn_activation=0x7f0c0119;
        /**  "Edit FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int fdn_contact_added=0x7f0c0135;
        /**  "Delete FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int fdn_contact_deleted=0x7f0c013b;
        /**  "Edit FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int fdn_contact_updated=0x7f0c0138;
        /**  Call settings setting option name  when FDN is disabled
         */
        public static final int fdn_disabled=0x7f0c011b;
        /**  SIM PIN2 screen: error message displayed in a dialog 
         */
        public static final int fdn_enable_puk2_requested=0x7f0c015e;
        /**  Call settings setting option name when FDN is enabled 
         */
        public static final int fdn_enabled=0x7f0c011a;
        /**  FDN settings: error message displayed in a popup (toast) 
         */
        public static final int fdn_invalid_number=0x7f0c013d;
        /**  Status message displayed in the "Call settings error" dialog when operation fails due to FDN 
         */
        public static final int fdn_only_error=0x7f0c0080;
        /**  Call settings screen, displayed when vm provider supplied forwarding number change fails
         */
        public static final int fw_change_failed=0x7f0c0089;
        /**  Call settings screen, displayed when forwarding number read fails
 outdated translation 6776365552098929353 
         */
        public static final int fw_get_in_vm_failed=0x7f0c008a;
        public static final int general_news_settings=0x7f0c00cd;
        /**  FDN related strings 
 Label for PIN2 entry screen 
         */
        public static final int get_pin2=0x7f0c012f;
        /**  Use this to describe the separate conference call button; currently for screen readers through accessibility. 
         */
        public static final int goPrivate=0x7f0c01e1;
        public static final int gsm_umts_network_preferences_dialogtitle=0x7f0c0106;
        /**  GSM/UMTS Options strings 
         */
        public static final int gsm_umts_network_preferences_title=0x7f0c0104;
        public static final int gsm_umts_network_preferneces_summary=0x7f0c0105;
        public static final int gsm_umts_options=0x7f0c00b0;
        public static final int hac_mode_summary=0x7f0c01ac;
        /**  Hearing aid settings 
         */
        public static final int hac_mode_title=0x7f0c01ab;
        /**  Title for the dialog used to display the user's IMEI number 
         */
        public static final int imei=0x7f0c004c;
        /**  Menu item label in SIM Contacts: Import all contact entries from the SIM card 
         */
        public static final int importAllSimEntries=0x7f0c01a8;
        /**  Menu item label in SIM Contacts: Import a single contact entry from the SIM card 
         */
        public static final int importSimEntry=0x7f0c01a7;
        /**  Import a single contact entry from contacts to the SIM card 
         */
        public static final int importToFDNfromContacts=0x7f0c01aa;
        /**  SIM Contacts: status message displayed while importing card 
         */
        public static final int importingSimContacts=0x7f0c01a9;
        /**  In-call screen: "call type" indication for a SIP call [CHAR LIMIT=30]  
         */
        public static final int incall_call_type_label_sip=0x7f0c0191;
        /**  In-call screen: call failure message displayed in an error dialog 
         */
        public static final int incall_error_call_failed=0x7f0c0187;
        /**  In-call screen: call failure message displayed in an error dialog.
         This string is currently unused (see comments in InCallScreen.java.) 
         */
        public static final int incall_error_emergency_only=0x7f0c0184;
        /**  In-call screen: call failure message displayed in an error dialog 
         */
        public static final int incall_error_no_phone_number_supplied=0x7f0c0186;
        /**  In-call screen: call failure message displayed in an error dialog 
         */
        public static final int incall_error_out_of_service=0x7f0c0185;
        /**  In-call screen: call failure message displayed in an error dialog 
         */
        public static final int incall_error_power_off=0x7f0c0183;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_conference=0x7f0c018e;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_hangup=0x7f0c0190;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_reject=0x7f0c018f;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_separate=0x7f0c018c;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_switch=0x7f0c018b;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_transfer=0x7f0c018d;
        /**  In-call screen: message displayed in an error dialog 
         */
        public static final int incall_error_supp_service_unknown=0x7f0c018a;
        /**  In-call screen: status message displayed in a dialog when starting a feature code 
         */
        public static final int incall_status_dialed_fc=0x7f0c0189;
        /**  In-call screen: status message displayed in a dialog when starting an MMI 
         */
        public static final int incall_status_dialed_mmi=0x7f0c0188;
        public static final int international_disable=0x7f0c00dc;
        public static final int international_enable=0x7f0c00db;
        /**  Item of the dialog to select the phone type for outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int internet_phone=0x7f0c01f7;
        /**  SIM PIN screen: error message when PIN is too short or too long 
         */
        public static final int invalidPin=0x7f0c014a;
        /**  SIM PIN2 screen: error message 
         */
        public static final int invalidPin2=0x7f0c015a;
        /**  SIM PIN2 screen: error message 
         */
        public static final int invalidPuk2=0x7f0c015b;
        /**  CDM Call settings screen, setting option name 
         */
        public static final int labelCDMAMore=0x7f0c004f;
        /**  Call settings screen, setting option name 
         */
        public static final int labelCF=0x7f0c0063;
        /**  Call forwarding settings screen, setting option name 
         */
        public static final int labelCFB=0x7f0c006a;
        /**  Call forwarding settings screen, setting option name 
         */
        public static final int labelCFNRc=0x7f0c0074;
        /**  Call forwarding settings screen, setting option name 
         */
        public static final int labelCFNRy=0x7f0c006f;
        /**  Call forwarding settings screen, setting option name 
         */
        public static final int labelCFU=0x7f0c0064;
        /**  Additional call settings screen, setting check box name 
         */
        public static final int labelCW=0x7f0c005f;
        /**  Call settings screen, setting option name 
         */
        public static final int labelCallerId=0x7f0c005b;
        /**  settings strings 
 GSM Call settings screen, setting option name 
         */
        public static final int labelGSMMore=0x7f0c004e;
        /**  Call setting screen, nework service setting name 
         */
        public static final int labelNwService=0x7f0c005a;
        /**  Available networks screen title/heading 
         */
        public static final int label_available=0x7f0c008f;
        /**  network depersonalization 
 Label text for PIN entry widget on SIM Network Depersonalization panel 
         */
        public static final int label_ndp=0x7f0c0046;
        /**  SIM PIN2 screen: label for PUK2 entry widget 
         */
        public static final int label_puk2_code=0x7f0c015d;
        public static final int lafs_disable=0x7f0c00e8;
        public static final int lafs_enable=0x7f0c00e7;
        public static final int list_language_dtitle=0x7f0c00df;
        public static final int list_language_summary=0x7f0c00de;
        public static final int list_language_title=0x7f0c00dd;
        /**  Mobile network settings screen, toast when searching for available networks 
         */
        public static final int load_networks_progress=0x7f0c0090;
        public static final int local_disable=0x7f0c00d3;
        public static final int local_enable=0x7f0c00d2;
        public static final int local_weather_disable=0x7f0c00e2;
        public static final int local_weather_enable=0x7f0c00e1;
        public static final int lodgings_disable=0x7f0c00ee;
        public static final int lodgings_enable=0x7f0c00ed;
        public static final int maintenance_disable=0x7f0c00cc;
        public static final int maintenance_enable=0x7f0c00cb;
        /**  Label for "Manage conference call" panel [CHAR LIMIT=40] 
         */
        public static final int manageConferenceLabel=0x7f0c002e;
        /**  Call settings screen, button label that takes you to
         the Fixed Dialing Number management screen 
         */
        public static final int manage_fdn_list=0x7f0c0118;
        /**  Title for the dialog used to display the user's MEID number on CDMA network 
         */
        public static final int meid=0x7f0c004d;
        /**  FDN list screen: menu item label 
         */
        public static final int menu_add=0x7f0c012c;
        /**  FDN list screen: menu item label 
         */
        public static final int menu_delete=0x7f0c012e;
        /**  FDN list screen: menu item label 
         */
        public static final int menu_edit=0x7f0c012d;
        /**  Call forwarding dialog box, text field label 
         */
        public static final int messageCFB=0x7f0c006b;
        /**  Call forwarding dialog box, text field label 
         */
        public static final int messageCFNRc=0x7f0c0075;
        /**  Call forwarding dialog box, text field label 
         */
        public static final int messageCFNRy=0x7f0c0070;
        /**  Call forwarding dialog box, text field label 
         */
        public static final int messageCFU=0x7f0c0065;
        public static final int mhh_disable=0x7f0c00fd;
        public static final int mhh_enable=0x7f0c00fc;
        /**  SIM PIN screen: error message 
         */
        public static final int mismatchPin=0x7f0c0149;
        /**  SIM PIN2 screen: error message 
         */
        public static final int mismatchPin2=0x7f0c0159;
        /**  Dialog label when an MMI code is canceled 
         */
        public static final int mmiCancelled=0x7f0c002c;
        /**  MMI dialog strings 
 Dialog label when an MMI code starts running 
         */
        public static final int mmiStarted=0x7f0c002a;
        /**  networks setting strings 
 Mobile network settings screen title 
         */
        public static final int mobile_networks=0x7f0c008e;
        public static final int multi_category_disable=0x7f0c0103;
        public static final int multi_category_enable=0x7f0c0102;
        /**  "Edit FDN Contact" screen: Label for the "name" text field 
         */
        public static final int name=0x7f0c0130;
        public static final int national_disable=0x7f0c00d9;
        public static final int national_enable=0x7f0c00d8;
        /**  Title for the dialog used to display CDMA DisplayInfo 
         */
        public static final int network_message=0x7f0c01b0;
        /**  Available networks screen, toast when an error is encountered when searching for networks 
         */
        public static final int network_query_error=0x7f0c0093;
        /**  Mobile network settings screen, setting option name 
         */
        public static final int networks=0x7f0c0054;
        /**  SIM PIN2 screen: label for PIN entry widget 
         */
        public static final int newPin2Label=0x7f0c0155;
        /**  SIM PIN screen: label for PIN entry widget 
         */
        public static final int newPinLabel=0x7f0c0146;
        /**  Call settings screen, Set voicemail number dialog text 
         */
        public static final int no_change=0x7f0c008b;
        /**  Message of the alert dialog to notify user that there is no Internet connectivity. [CHAR LIMIT=NONE] 
         */
        public static final int no_internet_available=0x7f0c0233;
        /**  Title of the alert dialog to notify user that there is no Internet connectivity. [CHAR LIMIT=40] 
         */
        public static final int no_internet_available_title=0x7f0c0231;
        /**  Message of the dialog to redirect the user to SIP settings. [CHAR LIMIT=NONE] 
         */
        public static final int no_sip_account_found=0x7f0c01f9;
        /**  Title of the dialog to redirect the user to SIP settings. [CHAR LIMIT=NONE] 
         */
        public static final int no_sip_account_found_title=0x7f0c01f8;
        /**  missing voicemail number 
 Title of the "Missing voicemail number" dialog 
         */
        public static final int no_vm_number=0x7f0c0039;
        /**  Body text of the "Missing voicemail number" dialog 
         */
        public static final int no_vm_number_msg=0x7f0c003a;
        /**  Title of the alert dialog to notify user that Internet call is not supported. [CHAR LIMIT=40] 
         */
        public static final int no_voip=0x7f0c0235;
        /**  Message of the alert dialog to notify user that there is no Wi-Fi connectivity. [CHAR LIMIT=NONE] 
         */
        public static final int no_wifi_available=0x7f0c0234;
        /**  Title of the alert dialog to notify user that there is no Wi-Fi connectivity. [CHAR LIMIT=40] 
         */
        public static final int no_wifi_available_title=0x7f0c0232;
        /**  Showing that port number is out of range in an alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int not_a_valid_port=0x7f0c0230;
        /**  Available networks screen, toast when SIM card isn't allowed on a network 
         */
        public static final int not_allowed=0x7f0c0095;
        /**  End of SIP settings related strings 
 Dialog title to notify user that Voice calling is not supported
         on this device. [CHAR LIMIT=40] 
         */
        public static final int not_voice_capable=0x7f0c0247;
        /**  The "label" of the in-call Notification for an incoming ringing call 
         */
        public static final int notification_incoming_call=0x7f0c017c;
        /**  Missed call notification message used for a single missed call, including
         the caller-id info from the missed call 
         */
        public static final int notification_missedCallTicker=0x7f0c0179;
        /**  Notification strings 
 Missed call notification label, used when there's exactly one missed call 
         */
        public static final int notification_missedCallTitle=0x7f0c0176;
        /**  Missed call notification message used when there are multiple missed calls 
         */
        public static final int notification_missedCallsMsg=0x7f0c0178;
        /**  Missed call notification label, used when there are two or more missed calls 
         */
        public static final int notification_missedCallsTitle=0x7f0c0177;
        /**  Label for the expanded "No service" notification item, including the
         operator name set by user 
         */
        public static final int notification_network_selection_text=0x7f0c0182;
        /**  Label for the "No service" notification item, when expanded. 
         */
        public static final int notification_network_selection_title=0x7f0c0181;
        /**  The "label" of the in-call Notification for a call that's on hold 
         */
        public static final int notification_on_hold=0x7f0c017b;
        /**  The "label" of the in-call Notification for an ongoing call, used
         as the format string for a Chronometer widget. 
         */
        public static final int notification_ongoing_call_format=0x7f0c017a;
        /**  Message displayed in the "Voicemail" notification item,
         indicating that there's no voicemail number available 
         */
        public static final int notification_voicemail_no_vm_number=0x7f0c0180;
        /**  Message displayed in the "Voicemail" notification item, allowing the user
         to dial the indicated number. 
         */
        public static final int notification_voicemail_text_format=0x7f0c017f;
        /**  Label for the "Voicemail" notification item, when expanded. 
         */
        public static final int notification_voicemail_title=0x7f0c017d;
        /**  Label for the expanded "Voicemail" notification item,
         including a count of messages. 
         */
        public static final int notification_voicemail_title_count=0x7f0c017e;
        /**  "Edit FDN Contact" screen: Label for the "number" text field 
         */
        public static final int number=0x7f0c0131;
        /**  Positive button label ("OK") used in several dialogs in the phone UI [CHAR LIMIT=10] 
         */
        public static final int ok=0x7f0c0029;
        /**  SIM PIN2 screen: label for PIN entry widget 
         */
        public static final int oldPin2Label=0x7f0c0154;
        /**  SIM PIN screen: label for PIN entry widget 
         */
        public static final int oldPinLabel=0x7f0c0145;
        /**  In-call screen: status label for a call that's on hold 
         */
        public static final int onHold=0x7f0c0007;
        /**  In-call screen: status label for the current active call 
         */
        public static final int ongoing=0x7f0c0008;
        /**  Text for the onscreen "Add call" button 
         */
        public static final int onscreenAddCallText=0x7f0c01a1;
        /**  Text for the onscreen "Audio" button that lets you switch
         between speaker / bluetooth / earpiece [CHAR LIMIT=10] 
         */
        public static final int onscreenAudioText=0x7f0c01a6;
        /**  Text for the onscreen "Bluetooth" button 
         */
        public static final int onscreenBluetoothText=0x7f0c01a0;
        /**  Text for the onscreen "End call" button 
         */
        public static final int onscreenEndCallText=0x7f0c019b;
        /**  Text for the onscreen "Hide Dialpad" button 
         */
        public static final int onscreenHideDialpadText=0x7f0c019d;
        /**  Text for the onscreen "Hold" button 
         */
        public static final int onscreenHoldText=0x7f0c0199;
        /**  Text for the onscreen "Manage calls" button 
         */
        public static final int onscreenManageCallsText=0x7f0c01a4;
        /**  Text for the onscreen "Manage conference" button [CHAR LIMIT=20] 
 outdated translation 6952581578445378981 
         */
        public static final int onscreenManageConferenceText=0x7f0c01a5;
        /**  Text for the onscreen "Merge calls" button 
         */
        public static final int onscreenMergeCallsText=0x7f0c01a2;
        /**  Text for the onscreen "Mute" button 
         */
        public static final int onscreenMuteText=0x7f0c019f;
        /**  Text for the onscreen "Show Dialpad" button 
         */
        public static final int onscreenShowDialpadText=0x7f0c019c;
        /**  Text for the onscreen "Speaker" button 
         */
        public static final int onscreenSpeakerText=0x7f0c019e;
        /**  Text for the onscreen "Swap calls" button 
         */
        public static final int onscreenSwapCallsText=0x7f0c01a3;
        /**  Text for the onscreen "Hold" button in the "Unhold" state 
         */
        public static final int onscreenUnholdText=0x7f0c019a;
        /**  Default value for the outbound-proxy-address preference summary. [CHAR LIMIT=NONE] 
         */
        public static final int optional_summary=0x7f0c022a;
        /**  Button label within the OTA activation screen 
         */
        public static final int ota_activate=0x7f0c01b8;
        /**  Button label shown on OTA screens to go back to the previous screen 
         */
        public static final int ota_back=0x7f0c01c6;
        /**  Button label in OTA listen screen that cancels activation and goes to the previous screen 
         */
        public static final int ota_call_end=0x7f0c01c3;
        /**  Button label within the OTA listen screen 
         */
        public static final int ota_dialpad=0x7f0c01bc;
        /**  String to display within the OTA Fail Notice dialog 
         */
        public static final int ota_failure=0x7f0c01bf;
        /**  Message displayed on the OTA "listening" screen. This message
         needs to be kept at 2 lines or less to be sure that there's
         enough room for the dialpad. [CHAR LIMIT=80] 
         */
        public static final int ota_listen=0x7f0c01bb;
        /**  Button label shown on OTA screens that have a next screen 
         */
        public static final int ota_next=0x7f0c01c5;
        /**  String to be displayed on OTA listen screen once user has selected the
         correct option to begin provisioning 
         */
        public static final int ota_progress=0x7f0c01be;
        /**  Label shown on dialog button that continues with activation 
         */
        public static final int ota_skip_activation_dialog_continue_label=0x7f0c01b7;
        /**  Message displayed in skip activation dialog  
         */
        public static final int ota_skip_activation_dialog_message=0x7f0c01b5;
        /**  Label shown on dialog button that allows the user to skip activation 
         */
        public static final int ota_skip_activation_dialog_skip_label=0x7f0c01b6;
        /**  Title of skip activation dialog 
         */
        public static final int ota_skip_activation_dialog_title=0x7f0c01b4;
        /**  String to display within the OTA SPC Fail Notice dialog 
         */
        public static final int ota_spc_failure=0x7f0c01c2;
        /**  Button label within the OTA listen screen 
         */
        public static final int ota_speaker=0x7f0c01bd;
        /**  String to be displayed on the OTA Fail/Success screen upon successful provisioning 
         */
        public static final int ota_successful=0x7f0c01c0;
        /**  OTA-specific strings 
 Title shown on OTA screen 
         */
        public static final int ota_title_activate=0x7f0c01b1;
        /**  Title text shown when phone activation is successful 
         */
        public static final int ota_title_activate_success=0x7f0c01b9;
        /**  Title text shown on screen where activation fails 
         */
        public static final int ota_title_problem_with_activation=0x7f0c01ba;
        /**  Message displayed on the OTA activation screen. 
         */
        public static final int ota_touch_activate=0x7f0c01b2;
        /**  Message displayed on the OTA activation screen 
         */
        public static final int ota_touch_activate_new=0x7f0c01b3;
        /**  Button label shown on OTA error screen to allow the user to try again 
         */
        public static final int ota_try_again=0x7f0c01c4;
        /**  String to be displayed on the OTA Fail/Success screen upon unsuccessful provisioning 
         */
        public static final int ota_unsuccessful=0x7f0c01c1;
        /**  Title displayed above settings coming after voicemail in the call features screen 
         */
        public static final int other_settings=0x7f0c01d5;
        public static final int password=0x7f0c023d;
        /**  Text of the password preference. [CHAR LIMIT=NONE] 
         */
        public static final int password_title=0x7f0c021a;
        /**  In-call screen: button label on the "wait" prompt dialog in CDMA Mode
         */
        public static final int pause_prompt_no=0x7f0c0037;
        /**  In-call screen: body text of the dialog that appears when we encounter
         the "PAUSE" character in a phone number to be dialed; this dialog gives
         informative message to the user to show the sending numbers following the "Pause". 
         */
        public static final int pause_prompt_str=0x7f0c0034;
        /**  In-call screen: button label on the "wait" prompt dialog in CDMA Mode
         */
        public static final int pause_prompt_yes=0x7f0c0036;
        /**  Incoming call screen, string when called from a pay phone 
         */
        public static final int payphone=0x7f0c0006;
        /**  Official label of the phone app, as seen in "Manage Applications"
         and other settings UIs. 
         */
        public static final int phoneAppLabel=0x7f0c0000;
        /**  Activity label for the in-call UI 
         */
        public static final int phoneIconLabel=0x7f0c0002;
        /**  ECM: Status bar notification message 
         */
        public static final int phone_entered_ecm_text=0x7f0c01c8;
        /**  ECM: Notification body 
         */
        public static final int phone_in_ecm_call_notification_text=0x7f0c01ca;
        /**  ECM: Notification title 
         */
        public static final int phone_in_ecm_notification_title=0x7f0c01c9;
        /**  Title of the dialog to select the phone type for the outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int pick_outgoing_call_phone_type=0x7f0c01f2;
        /**  Title of the dialog to select the phone among the list of phones for the outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int pick_outgoing_sip_phone=0x7f0c01f3;
        /**  SIM PIN2 screen: status message displayed in a popup (toast) 
         */
        public static final int pin2_changed=0x7f0c015c;
        /**  FDN settings: error message displayed in a popup (toast) 
         */
        public static final int pin2_invalid=0x7f0c013c;
        /**  Success message displayed on SIM PIN unlock panel 
         */
        public static final int pinUnlocked=0x7f0c003e;
        /**  SIM PIN screen: status message displayed in a popup (toast) 
         */
        public static final int pin_changed=0x7f0c0151;
        /**  SIM PIN screen: error message displayed in a popup (toast) 
         */
        public static final int pin_failed=0x7f0c0150;
        public static final int port=0x7f0c0240;
        /**  Text of the sip server/proxy port number. [CHAR LIMIT=NONE] 
 outdated translation 8014162755749862704 
         */
        public static final int port_title=0x7f0c021d;
        /**  Mobile network settings screen, setting option name 
         */
        public static final int prefer_2g=0x7f0c0107;
        /**  Mobile network settings screen, setting summary text 
         */
        public static final int prefer_2g_summary=0x7f0c0108;
        /**  Mobile network settings, summary for preferred network mode CDMA / EvDo [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_cdma_evdo_summary=0x7f0c00a5;
        /**  Mobile network settings, summary for preferred network mode CDMA only [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_cdma_only_summary=0x7f0c00a6;
        /**  Mobile network settings, summary for preferred network mode CDMA [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_cdma_summary=0x7f0c00a4;
        public static final int preferred_network_mode_dialogtitle=0x7f0c009f;
        /**  Mobile network settings, summary for preferred network mode EvDo only [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_evdo_only_summary=0x7f0c00a7;
        /**  Mobile network settings, summary for preferred network mode GSM [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_gsm_only_summary=0x7f0c00a1;
        /**  Mobile network settings, summary for preferred network mode GSM / UMTS [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_gsm_wcdma_summary=0x7f0c00a3;
        /**  Mobile network settings, summary for preferred network mode LTE / CDMA[CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_lte_cdma_summary=0x7f0c00a8;
        public static final int preferred_network_mode_summary=0x7f0c009e;
        public static final int preferred_network_mode_title=0x7f0c009d;
        /**  Mobile network settings, summary for preferred network mode WCDMA only [CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_wcdma_only_summary=0x7f0c00a2;
        /**  Mobile network settings, summary for preferred network mode WCDMA preferred[CHAR LIMIT=100] 
         */
        public static final int preferred_network_mode_wcdma_perf_summary=0x7f0c00a0;
        /**  Text of the account type. 'Primary' means the account is the one for sending all outgoing calls through. [CHAR LIMIT=NONE] 
         */
        public static final int primary_account=0x7f0c0205;
        /**  Summary text of the account type checkbox. [CHAR LIMIT=NONE] 
 outdated translation 1261271657165698218 
         */
        public static final int primary_account_summary=0x7f0c0207;
        /**  Summary of a SIP account in the list of SIP accounts, consists of primary account status and registration status. This string indicates that this SIP account is a primary account and the string placeholder is the registration status, which will be one of the strings with name starting with "registration_status_" below. [CHAR LIMIT=NONE] 
         */
        public static final int primary_account_summary_with=0x7f0c0209;
        /**  Title of the account type checkbox. Once the box is checked, the account will be the only 'primary' one among the accounts. [CHAR LIMIT=NONE] 
         */
        public static final int primary_account_title=0x7f0c0206;
        /**  Incoming call screen, string when number hidden 
         */
        public static final int private_num=0x7f0c0005;
        /**  ECM: Progress text 
         */
        public static final int progress_dialog_exiting_ecm=0x7f0c01cc;
        public static final int proxy_address=0x7f0c023f;
        /**  Text of the outbound proxy address preference. [CHAR LIMIT=NONE] 
 outdated translation 4425801526470783622 
         */
        public static final int proxy_address_title=0x7f0c021c;
        /**  Item of the dialog to select the phone type for outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int pstn_phone=0x7f0c01f6;
        /**  SIM PIN2 screen: error message displayed in a dialog 
         */
        public static final int puk2_requested=0x7f0c015f;
        /**  SIM PIN screen: error message displayed in a dialog 
         */
        public static final int puk_requested=0x7f0c0152;
        /**  Status message displayed on SIM PIN unlock panel 
         */
        public static final int puk_unlocked=0x7f0c0045;
        /**  Status message displayed in the "Call settings error" dialog 
         */
        public static final int radio_off_error=0x7f0c0081;
        /**  Toast in Call settings dialog while settings are being read 
         */
        public static final int reading_settings=0x7f0c007b;
        public static final int regional_disable=0x7f0c00d6;
        public static final int regional_enable=0x7f0c00d5;
        public static final int register_automatically=0x7f0c009c;
        /**  Available networks screen, toast when registering on a specific network 
         */
        public static final int register_on_network=0x7f0c0094;
        /**  Available networks screen, toast when registered on a specific network 
         */
        public static final int registration_done=0x7f0c0097;
        /**  Text of Internet-call registration status, checking current registration status with SIP service [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_checking_status=0x7f0c020a;
        /**  Text of Internet-call registration status, currently we can receive calls on this account [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_done=0x7f0c0211;
        /**  Text of Internet-call registration status, registration failed with a reason; will try again later [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_failed_try_later=0x7f0c0212;
        /**  Text of Internet-call registration status, registration failed due to invalid credentials [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_invalid_credentials=0x7f0c0213;
        /**  Text of Internet-call registration status, no data connection [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_no_data=0x7f0c020e;
        /**  Text of Internet-call registration status, no Wi-Fi connection [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_no_wifi_data=0x7f0c020f;
        /**  Text of Internet-call registration status, currently not receiving calls on this account [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_not_receiving=0x7f0c020d;
        /**  Text of Internet-call registration status, registration process is not running due to some error [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_not_running=0x7f0c0210;
        /**  Text of Internet-call registration status, registering with SIP server in order to receive calls on this account [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_registering=0x7f0c020b;
        /**  Text of Internet-call registration status, registration failed due to unknown host exception [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_server_unreachable=0x7f0c0214;
        /**  Text of Internet-call registration status, still trying to register with SIP server [CHAR LIMIT=NONE] 
         */
        public static final int registration_status_still_trying=0x7f0c020c;
        /**  Text of checkbox to remember the sip phone for all outbound calls. [CHAR LIMIT=NONE] 
         */
        public static final int remember_my_choice=0x7f0c01f4;
        /**  Title for the button to remove a sip account. [CHAR LIMIT=NONE] 
 outdated translation 5617223124643879337 
         */
        public static final int remove_sip_account=0x7f0c01fc;
        /**  Toast message to indicate that the system is removing the account. [CHAR LIMIT=NONE] 
         */
        public static final int removing_account=0x7f0c01ff;
        /**  Status message displayed on SIM Network Depersonalization panel 
         */
        public static final int requesting_unlock=0x7f0c0049;
        /**  Help text of checkbox to unset the default sip phone for all outbound calls. [CHAR LIMIT=NONE] 
         */
        public static final int reset_my_choice_hint=0x7f0c01f5;
        /**  Canned response for the "Respond via SMS" feature for incoming calls. [CHAR LIMIT=35] 
         */
        public static final int respond_via_sms_canned_response_1=0x7f0c0248;
        /**  Canned response for the "Respond via SMS" feature for incoming calls. [CHAR LIMIT=35] 
         */
        public static final int respond_via_sms_canned_response_2=0x7f0c0249;
        /**  Canned response for the "Respond via SMS" feature for incoming calls. [CHAR LIMIT=35] 
         */
        public static final int respond_via_sms_canned_response_3=0x7f0c024a;
        /**  Canned response for the "Respond via SMS" feature for incoming calls. [CHAR LIMIT=35] 
         */
        public static final int respond_via_sms_canned_response_4=0x7f0c024b;
        /**  "Respond via SMS": Confirmation message shown after sending
         a text response. [CHAR LIMIT=40] 
         */
        public static final int respond_via_sms_confirmation_format=0x7f0c0251;
        /**  "Respond via SMS" option that lets you compose a custom response. [CHAR LIMIT=30] 
         */
        public static final int respond_via_sms_custom_message=0x7f0c024c;
        /**  Dialog title when changing a string for the "Respond via SMS" feature. [CHAR LIMIT=30] 
         */
        public static final int respond_via_sms_edittext_dialog_title=0x7f0c0250;
        /**  Settings summary string for the "Respond via SMS" feature. [CHAR LIMIT=40] 
         */
        public static final int respond_via_sms_setting_summary=0x7f0c024f;
        /**  Title of settings screen for managing the "Respond via SMS" feature. [CHAR LIMIT=30] 
         */
        public static final int respond_via_sms_setting_title=0x7f0c024d;
        /**  Slightly more verbose title of settings screen for managing the
         "Respond via SMS" feature. [CHAR LIMIT=30] 
         */
        public static final int respond_via_sms_setting_title_2=0x7f0c024e;
        /**  Status message displayed in the "Call settings error" dialog 
         */
        public static final int response_error=0x7f0c007e;
        public static final int restaurants_disable=0x7f0c00eb;
        public static final int restaurants_enable=0x7f0c00ea;
        public static final int retail_directory_disable=0x7f0c00f1;
        public static final int retail_directory_enable=0x7f0c00f0;
        /**  In-call screen: auto retry  
         */
        public static final int retry=0x7f0c0027;
        /**  Toast in Call settings dialog while settings are being reverted 
         */
        public static final int reverting_settings=0x7f0c007d;
        /**  Mobile network settings screen, setting check box name 
         */
        public static final int roaming=0x7f0c00ab;
        /**  Mobile network settings screen, setting summary text when check box is clear 
         */
        public static final int roaming_disable=0x7f0c00ad;
        /**  Mobile network settings screen, setting summary text when check box is selected 
         */
        public static final int roaming_enable=0x7f0c00ac;
        /**  Mobile network settings UI: notification message shown when you
         lose data connectivity because you're roaming and you have the
         "data roaming" feature turned off. 
         */
        public static final int roaming_reenable_message=0x7f0c00ae;
        /**  Mobile network settings screen, dialog message when user selects the Data roaming check box 
         */
        public static final int roaming_warning=0x7f0c00af;
        /**  "Edit FDN Contact" screen: Button label for "save" action 
         */
        public static final int save=0x7f0c0132;
        /**  Toast message to indicate that the system is saving the account. [CHAR LIMIT=NONE] 
         */
        public static final int saving_account=0x7f0c01fe;
        /**  Available networks screen, setting option name 
         */
        public static final int search_networks=0x7f0c0092;
        /**   Use this to describe the select contact button in EditPhoneNumberPreference; currently for screen readers through accessibility. 
         */
        public static final int selectContact=0x7f0c01e2;
        /**  Available networks screen, setting option name 
         */
        public static final int select_automatically=0x7f0c009a;
        /**  In-call screen: button label on the "wait" prompt dialog 
         */
        public static final int send_button=0x7f0c0035;
        public static final int send_keepalive=0x7f0c0242;
        /**  Text of the keepalive preference summary. [CHAR LIMIT=NONE] 
         */
        public static final int send_keepalive_summary=0x7f0c0220;
        /**  Text of the keepalive preference. [CHAR LIMIT=NONE] 
         */
        public static final int send_keepalive_title=0x7f0c021f;
        public static final int set_primary=0x7f0c0244;
        /**  Text of the set-primary preference summary. [CHAR LIMIT=NONE] 
         */
        public static final int set_primary_summary=0x7f0c0224;
        /**  Text of the set-primary preference. Simplified from "Make this my primary account". [CHAR LIMIT=NONE] 
         */
        public static final int set_primary_title=0x7f0c0223;
        /**  Label for the "Network settings" screen in the Settings UI 
         */
        public static final int settings_label=0x7f0c0051;
        /**  Appears when user tries to import contacts in SIM during Airplane mode
      [CHAR LIMIT=NONE] 
         */
        public static final int simContacts_airplaneMode=0x7f0c0141;
        /**  Call settings, string that appears on FDN contact list when there are no contacts on the SIM. 
         */
        public static final int simContacts_empty=0x7f0c013f;
        /**  ADN related strings 
 Placeholder text displayed while loading the list of SIM contacts 
         */
        public static final int simContacts_emptyLoading=0x7f0c013e;
        /**  Call settings: title of the dialog that lets you select contacts from the SIM. 
         */
        public static final int simContacts_title=0x7f0c0140;
        /**  Button label on "SIM Missing" screen 
         */
        public static final int sim_missing_continueView_text=0x7f0c0166;
        /**  Message displayed on "SIM Missing" screen 
         */
        public static final int sim_missing_msg_text=0x7f0c0167;
        /**  Button label on SIM Network Depersonalization panel 
         */
        public static final int sim_ndp_dismiss_text=0x7f0c0048;
        /**  Button label on SIM Network Depersonalization panel 
         */
        public static final int sim_ndp_unlock_text=0x7f0c0047;
        /**  Button label on "SIM Unlock" screen 
         */
        public static final int sim_unlock_dismiss_text=0x7f0c0168;
        /**  Progress message displayed on "SIM Unlock" screen 
         */
        public static final int sim_unlock_status_text=0x7f0c016a;
        /**  Button label on "SIM Unlock" screen 
         */
        public static final int sim_unlock_unlock_text=0x7f0c0169;
        /**  String of the category which lists all sip accounts. [CHAR LIMIT=NONE] 
         */
        public static final int sip_account_list=0x7f0c01fd;
        /**  Title displayed SIP account settings in the sip settings category. [CHAR LIMIT=NONE] 
 outdated translation 1155104888417065951 
         */
        public static final int sip_accounts=0x7f0c01e4;
        /**  The Sip Account Settings's summary. [CHAR LIMIT=NONE] 
 outdated translation 3642905600751185685 
         */
        public static final int sip_accounts_summary=0x7f0c01e6;
        /**  Title displayed SIP account settings in the sip settings category. [CHAR LIMIT=NONE] 
         */
        public static final int sip_accounts_title=0x7f0c01e5;
        public static final int sip_address_only=0x7f0c0239;
        /**  Do not translate the following strings. Used for the Internet call options. Need to be in-sync with Settings.System.SIP_ strings. 
         */
        public static final int sip_always=0x7f0c0238;
        /**  Option for whether the SIP service should send keepalive messages. [CHAR LIMIT=40] 
         */
        public static final int sip_always_send_keepalive=0x7f0c0237;
        public static final int sip_ask_me_each_time=0x7f0c023a;
        /**  Title for the button of configuring the way we handle an outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options=0x7f0c01e9;
        /**  Item of the Internet call option dialog: for routing all outgoing calls via SIP. [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options_entry_1=0x7f0c01ec;
        /**  Item of the Internet call option dialog: for routing a outgoing call via SIP if the destination is a SIP URI. [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options_entry_2=0x7f0c01ed;
        /**  Item of the Internet call option dialog: for asking user to select the way for each outgoing call. [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options_entry_3=0x7f0c01ee;
        /**  Title for the dialog of selecting the way we handle an outgoing call. [CHAR LIMIT=NONE] 
 outdated translation 6580077718129226015 
         */
        public static final int sip_call_options_title=0x7f0c01ea;
        /**  Item of the Internet call (Wi-Fi only) option dialog: for routing all outgoing calls via SIP. [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options_wifi_only_entry_1=0x7f0c01ef;
        /**  Title for the dialog of selecting the way we handle an outgoing call (Wi-Fi only). [CHAR LIMIT=NONE] 
         */
        public static final int sip_call_options_wifi_only_title=0x7f0c01eb;
        /**  Title of the sip editor screen. [CHAR LIMIT=NONE] 
         */
        public static final int sip_edit_new_title=0x7f0c0217;
        /**  Title of the sip editor screen. [CHAR LIMIT=NONE] 
 outdated translation 5721647253413919727 
         */
        public static final int sip_edit_title=0x7f0c0216;
        /**  Menu item for no sip account found dialog 
         */
        public static final int sip_menu_add=0x7f0c01fa;
        /**  Menu item when the menu button is pressed in the sip account editor. [CHAR LIMIT=NONE] 
         */
        public static final int sip_menu_discard=0x7f0c0201;
        /**  Menu item when the menu button is pressed in the sip account editor. [CHAR LIMIT=NONE] 
         */
        public static final int sip_menu_save=0x7f0c0200;
        /**  Title displayed for the button of receiving incoming SIP calls flag. Enabled for receiving calls. [CHAR LIMIT=NONE] 
         */
        public static final int sip_receive_calls=0x7f0c01e7;
        /**  Help user to understand that it will require more battery usage if the 'receiving incoming call' is enabled. [CHAR LIMIT=NONE] 
 outdated translation 8185472827397188433 
         */
        public static final int sip_receive_calls_summary=0x7f0c01e8;
        /**  Start of SIP related strings defined from here. 
 Title displayed SIP settings coming after other call settings in the call features screen. [CHAR LIMIT=NONE] 
         */
        public static final int sip_settings=0x7f0c01e3;
        /**  Option for whether the SIP service should send keepalive messages. [CHAR LIMIT=40] 
         */
        public static final int sip_system_decide=0x7f0c0236;
        /**  Incoming call hint: drag the tab right to answer 
         */
        public static final int slide_to_answer=0x7f0c01d8;
        /**  Incoming call hint: drag the tab right to answer and end the active call 
         */
        public static final int slide_to_answer_and_end_active=0x7f0c01dc;
        /**  Incoming call hint: drag the tab right to answer and end the call on hold 
         */
        public static final int slide_to_answer_and_end_onhold=0x7f0c01dd;
        /**  Incoming call hint: drag the tab right to answer and hold the active call 
         */
        public static final int slide_to_answer_and_hold=0x7f0c01db;
        /**  Incoming call hint shown on tab (must be kept very short): answer incoming call 
         */
        public static final int slide_to_answer_hint=0x7f0c01de;
        /**  Incoming call hint: drag the tab left to decline the incoming call 
         */
        public static final int slide_to_decline=0x7f0c01da;
        /**  Incoming call hint shown on tab (must be kept very short): decline incoming call 
         */
        public static final int slide_to_decline_hint=0x7f0c01df;
        /**  Incoming call hint: drag the tab left to silence ringer 
         */
        public static final int slide_to_silence=0x7f0c01d9;
        public static final int sports_news_settings=0x7f0c00cf;
        public static final int stock_quotes_disable=0x7f0c00f7;
        public static final int stock_quotes_enable=0x7f0c00f6;
        /**  Mobile network settings screen setting option summary text 
         */
        public static final int sum_carrier_select=0x7f0c0098;
        /**  CDMA-only Call settings screen, setting option name
         */
        public static final int sum_cdma_call_settings=0x7f0c0059;
        /**  Call forwarding settings screen, setting summary text when forwarding when busy is disabled 
         */
        public static final int sum_cfb_disabled=0x7f0c006d;
        /**  Call forwarding settings screen, setting summary text when forwarding to specific number when busy 
 outdated translation 2501948432392255856 
         */
        public static final int sum_cfb_enabled=0x7f0c006c;
        /**  Call forwarding settings screen, setting summary text when Forward when unreachable is disabled 
         */
        public static final int sum_cfnrc_disabled=0x7f0c0077;
        /**  Call forwarding settings screen, setting summary text when forwarding to a specific number when unreachable
 outdated translation 3528648673654636587 
         */
        public static final int sum_cfnrc_enabled=0x7f0c0076;
        /**  Call forwarding settings screen, setting summary text when Forward when unanswered is disabled 
         */
        public static final int sum_cfnry_disabled=0x7f0c0072;
        /**  Call forwarding settings screen, setting summary text when forwarding to a specific number when unanswered 
 outdated translation 3473526018876802076 
         */
        public static final int sum_cfnry_enabled=0x7f0c0071;
        /**  Call forwarding settings screen, setting summary text when Always forward is disabled 
         */
        public static final int sum_cfu_disabled=0x7f0c0069;
        /**  Call forwarding settings screen, setting summary text the Always forward is set 
 outdated translation 956178654350554451 
         */
        public static final int sum_cfu_enabled=0x7f0c0067;
        /**  Call forwarding settings screen, setting summary text when forwarding all calls 
         */
        public static final int sum_cfu_enabled_indicator=0x7f0c0066;
        /**  Call forwarding settings screen, Always forward is enabled but the number is unavailable 
         */
        public static final int sum_cfu_enabled_no_number=0x7f0c0068;
        /**  Additional call settings screen, setting summary text when call waiting check box is clear 
         */
        public static final int sum_cw_disabled=0x7f0c0061;
        /**  Additional call settings screen, setting summary text when call waiting check box is selected 
         */
        public static final int sum_cw_enabled=0x7f0c0060;
        /**  Additional call settings screen, setting summary text for default Caller ID value 
         */
        public static final int sum_default_caller_id=0x7f0c005e;
        /**  Call settings screen, setting summary text 
         */
        public static final int sum_fdn=0x7f0c0121;
        /**  Call settings, FDN screen, setting option name 
         */
        public static final int sum_fdn_change_pin=0x7f0c0122;
        /**  Call settings, FDN screen, setting option name 
         */
        public static final int sum_fdn_manage_list=0x7f0c0123;
        /**  GSM-only Call settings screen, setting option name
         */
        public static final int sum_gsm_call_settings=0x7f0c0057;
        /**  Additional call settings screen, setting summary text when Caller ID is hidden 
         */
        public static final int sum_hide_caller_id=0x7f0c005c;
        /**  Available networks screen, setting summary text 
         */
        public static final int sum_search_networks=0x7f0c0099;
        /**  Available networks screen, setting summary text 
         */
        public static final int sum_select_automatically=0x7f0c009b;
        /**  Additional call settings screen, setting summary text when Caller ID is shown 
         */
        public static final int sum_show_caller_id=0x7f0c005d;
        /**  Call settings screen, "Voicemail" provider setting summary text when no provider is selected 
         */
        public static final int sum_voicemail_choose_provider=0x7f0c008c;
        public static final int technology_news_disable=0x7f0c0100;
        public static final int technology_news_enable=0x7f0c00ff;
        /**  Text for describing the account's owner and status. For example, 'Active, in use by Google Talk', it means that the account managed by SIP service was registered by the application 'Google Talk' and the status is active. [CHAR LIMIT=NONE] 
         */
        public static final int third_party_account_summary=0x7f0c0215;
        /**  Data usage settings screen option for checking the current usage 
         */
        public static final int throttle_current_usage=0x7f0c00b4;
        public static final int throttle_data_rate_reduced_subtext=0x7f0c00ba;
        /**  Screen option on the mobile network settings to go into data usage settings 
         */
        public static final int throttle_data_usage=0x7f0c00b2;
        public static final int throttle_data_usage_subtext=0x7f0c00b9;
        /**  Data usage settings screen option for accessing the carrier website
         */
        public static final int throttle_help=0x7f0c00b7;
        public static final int throttle_help_subtext=0x7f0c00bd;
        /**  Data usage settings screen option for throttling rate
         */
        public static final int throttle_rate=0x7f0c00b6;
        public static final int throttle_rate_subtext=0x7f0c00bc;
        /**  Title for the data usage settings screen 
         */
        public static final int throttle_settings_title=0x7f0c00b3;
        public static final int throttle_status_subtext=0x7f0c00b8;
        /**  Data usage settings screen option for time frame
         */
        public static final int throttle_time_frame=0x7f0c00b5;
        public static final int throttle_time_frame_subtext=0x7f0c00bb;
        public static final int transport=0x7f0c0241;
        /**  Text of the transport type preference. [CHAR LIMIT=NONE] 
 outdated translation 706735901627434385 
         */
        public static final int transport_title=0x7f0c021e;
        public static final int tty_mode_option_summary=0x7f0c0129;
        public static final int tty_mode_option_title=0x7f0c0128;
        public static final int tty_mode_summary=0x7f0c0127;
        public static final int tty_mode_title=0x7f0c0126;
        /**  Call status 
 Incoming call screen, name of "unknown" caller 
         */
        public static final int unknown=0x7f0c0004;
        /**  Error message displayed on SIM Network Depersonalization panel 
         */
        public static final int unlock_failed=0x7f0c004a;
        /**  Success message displayed on SIM Network Depersonalization panel 
         */
        public static final int unlock_success=0x7f0c004b;
        /**  "Edit FDN Contact" screen: status message displayed in a popup (toast) 
         */
        public static final int updating_fdn_contact=0x7f0c0137;
        /**  Toast in Call settings dialog while settings are being saved 
         */
        public static final int updating_settings=0x7f0c007c;
        /**  Title of the progress dialog displayed while updating Call settings 
         */
        public static final int updating_title=0x7f0c0079;
        public static final int username=0x7f0c023c;
        /**  Text of the username preference. [CHAR LIMIT=NONE] 
         */
        public static final int username_title=0x7f0c0219;
        /**  Dialog label when a USSD code starts running 
         */
        public static final int ussdRunning=0x7f0c002b;
        /**  Error message displayed on SIM PIN unlock panel 
         */
        public static final int verifyFailed=0x7f0c0041;
        /**  Label for PIN entry widget on SIM PIN unlock panel 
         */
        public static final int verifyNewPin=0x7f0c0040;
        /**  Call settings screen, Set voicemail number dialog text 
         */
        public static final int vm_change_failed=0x7f0c0088;
        /**  Call settings screen, Set voicemail number dialog text 
         */
        public static final int vm_changed=0x7f0c0087;
        /**  voicemail setting strings 
 Call settings screen, Label used in "Save voicemail number" dialog 
         */
        public static final int vm_save_number=0x7f0c0086;
        public static final int voice_privacy=0x7f0c0124;
        public static final int voice_privacy_summary=0x7f0c0125;
        /**  Call settings screen, setting option name 
         */
        public static final int voicemail=0x7f0c0052;
        /**  Call forwarding dialog box, voicemail number prefix 
         */
        public static final int voicemail_abbreviated=0x7f0c0053;
        /**  Call settings screen, "Voicemail" screen, default option - My Carrier 
         */
        public static final int voicemail_default=0x7f0c008d;
        /**  String to display in voicemail number summary when no voicemail num is set 
         */
        public static final int voicemail_number_not_set=0x7f0c01d2;
        /**  Voicemail service pref title 
         */
        public static final int voicemail_provider=0x7f0c01d3;
        /**  Voicemail dialog title 
         */
        public static final int voicemail_settings=0x7f0c01d1;
        /**  Prefix on the voicemail settings preference. The full string will be Settings for <provider name> 
         */
        public static final int voicemail_settings_for=0x7f0c01d4;
        /**  Call settings screen, Set voicemail dialog title 
         */
        public static final int voicemail_settings_number_label=0x7f0c016b;
        /**  post dial 
 In-call screen: body text of the dialog that appears when we encounter
         the "wait" character in a phone number to be dialed; this dialog asks the
         user if it's OK to send the numbers following the "wait". 
         */
        public static final int wait_prompt_str=0x7f0c0033;
        /**  In-call screen: on the "wild" character dialog, this is the label
         for a text widget that lets the user enter the digits that should
         replace the "wild" character. 
         */
        public static final int wild_prompt_str=0x7f0c0038;
    }
    public static final class style {
        public static final int AlertPanel=0x7f0e0002;
        public static final int ContactsActionBarStyle=0x7f0e001f;
        public static final int DialpadButtonStyle=0x7f0e001e;
        /**  Preference Style for the phone number preferences 
         */
        public static final int EditPhoneNumberPreference=0x7f0e000d;
        /**  Preference Style for the emergency callback mode 
 This styles is currently not used and just prepared for further usage 
         */
        public static final int EmergencyCallBack=0x7f0e000e;
        public static final int EmergencyDialerTheme=0x7f0e0021;
        /**  Preference Style for the ERI text 
         */
        public static final int EriWidgetBackground=0x7f0e000f;
        public static final int IccPanel=0x7f0e0001;
        /**  Buttons in the main "button row" of the in-call onscreen touch UI. 
         */
        public static final int InCallButton=0x7f0e0018;
        /**  "Compound button" variation of InCallButton.
         These buttons have the concept of two states: checked and unchecked.
         (This style is just like "InCallButton" except that we also
         clear out android:textOn and android:textOff, to avoid the default
         text label behavior of the ToggleButton class.) 
         */
        public static final int InCallCompoundButton=0x7f0e0019;
        /**  "End" button; similar to InCallButton. 
         */
        public static final int InCallEndButton=0x7f0e001a;
        /**  Text label drawn alongside buttons in the "extra button row" of
         the in-call onscreen touch UI. 
         */
        public static final int InCallExtraRowButtonLabel=0x7f0e001b;
        public static final int Incoming=0x7f0e0000;
        public static final int SimImportTheme=0x7f0e0020;
        public static final int TextAppearance=0x7f0e0006;
        public static final int TextAppearance_DialerLine1=0x7f0e0009;
        public static final int TextAppearance_DialerLine2=0x7f0e000a;
        public static final int TextAppearance_EmergencyDialerLine1=0x7f0e000b;
        public static final int TextAppearance_EmergencyDialerLine2=0x7f0e000c;
        public static final int TextAppearance_EriWidget=0x7f0e0010;
        public static final int TextAppearance_info_label=0x7f0e0007;
        /**  Theme for the InCallScreen activity.  This gives us a totally black
         window background instead of the default dark grey.  (We don't just use
         Theme.Black.NoTitleBar directly, since we want any popups or dialogs
         from the InCallScreen to have the correct holo style. 
         */
        public static final int Theme_InCallScreen=0x7f0e001d;
        /**  Theme for the activity com.android.phone.Settings, which is the
         "Mobile network settings" screen (used on non-voice-capable
         tablets as well as regular phone devices.) 
         */
        public static final int Theme_Settings=0x7f0e001c;
        public static final int ccOtaButton=0x7f0e0012;
        /**  OTA Call Card styles 
         */
        public static final int ccOtaButtonBar=0x7f0e0011;
        public static final int ccOtaDialVisible=0x7f0e0015;
        public static final int ccOtaNextButton=0x7f0e0013;
        public static final int ccOtaSkipButton=0x7f0e0014;
        public static final int ccOtaTextPrimary=0x7f0e0017;
        public static final int ccOtaWizardTitle=0x7f0e0016;
        public static final int entry_layout=0x7f0e0005;
        public static final int incall_top_button=0x7f0e0008;
        public static final int info_label=0x7f0e0003;
        public static final int info_layout=0x7f0e0004;
    }
    public static final class xml {
        public static final int call_feature_setting=0x7f050000;
        public static final int callforward_options=0x7f050001;
        public static final int carrier_select=0x7f050002;
        public static final int cdma_call_privacy=0x7f050003;
        public static final int cdma_options=0x7f050004;
        public static final int cell_broadcast_sms=0x7f050005;
        public static final int data_usage_settings=0x7f050006;
        public static final int fdn_setting=0x7f050007;
        public static final int gsm_umts_additional_options=0x7f050008;
        public static final int gsm_umts_call_options=0x7f050009;
        public static final int gsm_umts_options=0x7f05000a;
        public static final int network_setting=0x7f05000b;
        public static final int respond_via_sms_settings=0x7f05000c;
        public static final int sip_advanced_edit=0x7f05000d;
        public static final int sip_edit=0x7f05000e;
        public static final int sip_setting=0x7f05000f;
        public static final int sip_settings_category=0x7f050010;
    }
    public static final class styleable {
        /** Attributes that can be used with a CallForwardEditPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CallForwardEditPreference_reason com.android.phone:reason}</code></td><td></td></tr>
           <tr><td><code>{@link #CallForwardEditPreference_serviceClass com.android.phone:serviceClass}</code></td><td></td></tr>
           </table>
           @see #CallForwardEditPreference_reason
           @see #CallForwardEditPreference_serviceClass
         */
        public static final int[] CallForwardEditPreference = {
            0x7f010004, 0x7f010005
        };
        /**
          <p>This symbol is the offset where the {@link com.android.phone.R.attr#reason}
          attribute's value can be found in the {@link #CallForwardEditPreference} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unconditional</code></td><td>0</td><td> unconditional  </td></tr>
<tr><td><code>busy</code></td><td>1</td><td> busy </td></tr>
<tr><td><code>no_reply</code></td><td>2</td><td> no_reply </td></tr>
<tr><td><code>not_reachable</code></td><td>3</td><td> not_reachable </td></tr>
</table>
          @attr name android:reason
        */
        public static final int CallForwardEditPreference_reason = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.phone.R.attr#serviceClass}
          attribute's value can be found in the {@link #CallForwardEditPreference} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>1</td><td> voice </td></tr>
<tr><td><code>data</code></td><td>2</td><td> data </td></tr>
</table>
          @attr name android:serviceClass
        */
        public static final int CallForwardEditPreference_serviceClass = 0;
        /** Attributes that can be used with a EditPhoneNumberPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_changeNumButtonText com.android.phone:changeNumButtonText}</code></td><td> The change / update button text.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_confirmMode com.android.phone:confirmMode}</code></td><td> The confirm button mode.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_disableButtonText com.android.phone:disableButtonText}</code></td><td> The disable button text.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_enableButtonText com.android.phone:enableButtonText}</code></td><td> The enable button text.</td></tr>
           </table>
           @see #EditPhoneNumberPreference_changeNumButtonText
           @see #EditPhoneNumberPreference_confirmMode
           @see #EditPhoneNumberPreference_disableButtonText
           @see #EditPhoneNumberPreference_enableButtonText
         */
        public static final int[] EditPhoneNumberPreference = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003
        };
        /**
          <p>
          @attr description
           The change / update button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:changeNumButtonText
        */
        public static final int EditPhoneNumberPreference_changeNumButtonText = 2;
        /**
          <p>
          @attr description
           The confirm button mode. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>confirm</code></td><td>0</td><td> Traditional single action "ok" button. </td></tr>
<tr><td><code>activation</code></td><td>1</td><td> Two state "enable/disable" button. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:confirmMode
        */
        public static final int EditPhoneNumberPreference_confirmMode = 3;
        /**
          <p>
          @attr description
           The disable button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:disableButtonText
        */
        public static final int EditPhoneNumberPreference_disableButtonText = 1;
        /**
          <p>
          @attr description
           The enable button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:enableButtonText
        */
        public static final int EditPhoneNumberPreference_enableButtonText = 0;
    };
}
